{"version":3,"file":"static/js/944.4335362a.chunk.js","mappings":"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","sources":["Components/Element/Stars.jsx","Components/Message/LoaderModel.jsx","Redux/Action/StoryAction.js","Components/Layout/ListChapter.jsx","Components/Layout/BookDetails.jsx","Screen/BookScreen/DisplayBook.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nconst Stars = ({rating,count}) => {\r\n    return (\r\n        <span className=\"flex items-center\">\r\n            {[...Array(5)].map((_, index) => (\r\n                <svg\r\n                    key={index}\r\n                    fill={rating >= index + 1 ? 'currentColor' : 'none'}\r\n                    stroke=\"currentColor\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    className=\"w-4 h-4 text-red-500\"\r\n                    viewBox=\"0 0 24 24\"\r\n                >\r\n                    <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\" />\r\n                </svg>\r\n            ))}\r\n            <span className=\"text-gray-600 ml-3\">{count} Reviews</span>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Stars\r\n","import React from 'react';\r\n\r\nconst LoaderModel = () => {\r\n  return (\r\n    <div className=\"fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-75 z-50\">\r\n      <div className=\"text-center\">\r\n        <div className=\"loader ease-linear rounded-full border-8 border-t-8 border-gray-200 h-32 w-32 mb-4\"></div>\r\n        <h2 className=\"text-white text-xl font-semibold\">Loading...</h2>\r\n        <p className=\"text-white text-sm mt-2\">Please wait</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderModel;\r\n","import axios from 'axios'\r\nimport {\r\n    CREATE_STORY_REQUEST,\r\n    CREATE_STORY_SUCCESS,\r\n    CREATE_STORY_ERROR,\r\n\r\n    CREATE_CHAPTER_REQUEST,\r\n    CREATE_CHAPTER_SUCCESS,\r\n    CREATE_CHAPTER_ERROR,\r\n\r\n    LIST_STORY_REQUEST,\r\n    LIST_STORY_SUCCESS,\r\n    LIST_STORY_ERROR,\r\n\r\n    READ_CHAPTER_REQUEST,\r\n    READ_CHAPTER_SUCCESS,\r\n    READ_CHAPTER_ERROR,\r\n\r\n    READ_STORY_DETAILS_REQUEST,\r\n    READ_STORY_DETAILS_SUCCESS,\r\n    READ_STORY_DETAILS_ERROR,\r\n\r\n    LIST_CHAPTER_REQUEST,\r\n    LIST_CHAPTER_SUCCESS,\r\n    LIST_CHAPTER_ERROR,\r\n\r\n    UPDATE_CHAPTER_REQUEST,\r\n    UPDATE_CHAPTER_SUCCESS,\r\n    UPDATE_CHAPTER_ERROR,\r\n\r\n    LIST_ADMIN_STORY_REQUEST,\r\n    LIST_ADMIN_STORY_SUCCESS,\r\n    LIST_ADMIN_STORY_ERROR,\r\n\r\n    LIST_ADMIN_CHAPTER_REQUEST,\r\n    LIST_ADMIN_CHAPTER_SUCCESS,\r\n    LIST_ADMIN_CHAPTER_ERROR,\r\n    UPDATE_STORY_REQUEST,\r\n    UPDATE_STORY_SUCCESS,\r\n    UPDATE_STORY_ERROR,\r\n\r\n} from '../Constant/StoryConstant'\r\nimport { backend } from '../../Connection/conn'\r\n\r\nconst token = localStorage.getItem('token') ? localStorage.getItem('token') : null;\r\n\r\nconst Authconfig = {\r\n    headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n    },\r\n    withCredentials: true,\r\n}\r\n\r\nconst config = {\r\n    headers: {\r\n        'Content-type': 'application/json',\r\n    }\r\n}\r\n\r\n\r\nexport const createStory = (fdata) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CREATE_STORY_REQUEST })\r\n\r\n        const { data } = await axios.post(`${backend}/api/story/create/`, fdata, Authconfig)\r\n\r\n        dispatch({\r\n            type: CREATE_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: CREATE_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listStory = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_STORY_REQUEST })\r\n        const token = localStorage.getItem('token') ? localStorage.getItem('token') : null;\r\n        const Authconfig = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                ...(token && { Authorization: `Bearer ${token}` }), \r\n            },\r\n            withCredentials: true,\r\n        }\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/list`, Authconfig)\r\n        dispatch({\r\n            type: LIST_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listStoryDetails = (storyid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: READ_STORY_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}`, config)\r\n        \r\n        dispatch({\r\n            type: READ_STORY_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: READ_STORY_DETAILS_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const createChapter = (storyid, fdata) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CREATE_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.post(`${backend}/api/story/${storyid}/chapter/create/`, fdata, Authconfig)\r\n        dispatch({\r\n            type: CREATE_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: CREATE_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listChapter = (storyid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}/chapter/list`, config)\r\n        dispatch({\r\n            type: LIST_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const readChapter = (storyid, chapterid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: READ_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}/chapter/${chapterid}`, config)\r\n        dispatch({\r\n            type: READ_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: READ_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listAdminStory = (page=1) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_ADMIN_STORY_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/admin/story/list${page ? `?page=${page}` : ''}`, Authconfig)\r\n        dispatch({\r\n            type: LIST_ADMIN_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_ADMIN_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listAdminChapter = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_ADMIN_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/admin/story/${id}/chapter/list`, Authconfig)\r\n        dispatch({\r\n            type: LIST_ADMIN_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_ADMIN_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateChapter = (storyid, chapterid, fdata) => async (dispatch) => {\r\n    try {\r\n        console.log(fdata)\r\n        dispatch({ type: UPDATE_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.put(`${backend}/api/story/${storyid}/chapter/${chapterid}/update`, fdata, Authconfig)\r\n        dispatch({\r\n            type: UPDATE_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: UPDATE_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateStory = (storyid, fdata) => async (dispatch) => {\r\n    try {\r\n        console.log(fdata)\r\n        dispatch({ type: UPDATE_STORY_REQUEST })\r\n\r\n        const { data } = await axios.put(`${backend}/api/story/${storyid}/update`, fdata, Authconfig)\r\n        dispatch({\r\n            type: UPDATE_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: UPDATE_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { listChapter } from '../../Redux/Action/StoryAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n//import { CorrectUrl } from '../../Helper/ImageUrlCorrect';\r\nimport { backend } from '../../Connection/conn';\r\n\r\nconst ListChapter = () => {\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n    const ListChapterState = useSelector(state => state.listChapter);\r\n    const {\r\n        // loading, error,\r\n         chapters } = ListChapterState;\r\n\r\n    // State to hold resolved image URLs\r\n\r\n    useEffect(() => {\r\n        // Fetch the chapters when the id changes\r\n        dispatch(listChapter(id));\r\n        console.log('com reloaders')\r\n    }, [id, dispatch]);\r\n\r\n    console.log(typeof chapters)\r\n\r\n   // useEffect(() => {\r\n        // Function to resolve chapter cover URLs\r\n     /*   const fetchUrls = async () => {\r\n            const urls = {};\r\n            const chapterArray = Object.values(chapters); // Convert chapters object to an array\r\n            for (const chapter of chapterArray) {\r\n                if (chapter.cover) {\r\n                    try {\r\n                        const resolvedUrl = await CorrectUrl(chapter.cover);\r\n                        urls[chapter.ChapterId] = resolvedUrl;\r\n                    } catch (error) {\r\n                        console.error('Error fetching URL for chapter:', chapter.title, error);\r\n                        urls[chapter.ChapterId] = '/path/to/placeholder-image.jpg'; // Fallback image\r\n                    }\r\n                } else {\r\n                    urls[chapter.ChapterId] = '/path/to/placeholder-image.jpg'; // Fallback image\r\n                }\r\n            }\r\n   //     };\r\n\r\n        if (chapters && typeof chapters === 'object') {\r\n        }\r\n    }, [chapters,id]);*/\r\n\r\n    if (!chapters || typeof chapters !== 'object') return null;\r\n    console.log(chapters)\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"text-2xl mt-4 text-gray-500 font-bold text-center\">Chapters</h2>\r\n            <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 gap-4 pb-10 mt-8 sm:mt-16 w-full\">\r\n                {chapters.map((chapter, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className=\"flex flex-col items-start overflow-hidden shadow-lg rounded-xl transition-transform duration-300 transform hover:scale-105\"\r\n                    >\r\n                        <Link to={`/story/${id}/chapter/${chapter._id}`} className=\"block w-full\">\r\n                            <img\r\n                                className=\"object-cover w-full h-48 rounded-t-xl transition duration-300 transform hover:scale-105\"\r\n                                src={ chapter.cover } // Use resolved URL or fallback\r\n                                alt={`Chapter cover for ${chapter.title}`}\r\n                            />\r\n\r\n                        </Link>\r\n\r\n                        <div className=\"relative flex flex-col items-start p-4 bg-white border-t border-gray-200 rounded-b-xl\">\r\n                            <h2 className=\"text-lg font-semibold text-gray-800 truncate\">\r\n                                <Link to={`/story/${id}/chapter/${chapter._id}`} className=\"hover:text-blue-600\">\r\n                                    {chapter._id} : {chapter.title}\r\n                                </Link>\r\n                            </h2>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListChapter;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Stars from '../Element/Stars'\r\n\r\nconst BookDetails = ({ book }) => {\r\n    const [cover, setCover] = useState();\r\n\r\n    // Avoid setting state during render. Move it into useEffect.\r\n  /*  useEffect(() => {\r\n        if (book && book.cover) {\r\n            CorrectUrl(book.cover).then((cor) => {\r\n              //  setCover(cor); // Set the cover only when the correct URL is resolved\r\n            });\r\n        }\r\n    }, [book]);*/\r\n\r\n    // Return null if book is undefined to avoid rendering an empty UI\r\n    if (!book) {\r\n        return null;\r\n    }\r\n  \r\n    console.log(book.cover)\r\n\r\n    return (\r\n        <section className=\"text-gray-700 body-font overflow-hidden bg-white\">\r\n            \r\n            <div className=\"container px-5 py-24 mx-auto\">\r\n                <div className=\"lg:w-4/5 mx-auto flex flex-wrap\">\r\n                    <img\r\n                        alt=\"ecommerce\"\r\n                        className=\"lg:w-1/2 w-full object-cover object-center rounded border border-gray-200\"\r\n                        src={book.cover}\r\n                        loading=\"lazy\"\r\n                    />\r\n                    <div className=\"lg:w-1/2 w-full lg:pl-10 lg:py-6 mt-6 lg:mt-0\">\r\n                        <h1 className=\"text-gray-900 text-3xl title-font font-medium mb-1\">{book.name}</h1>\r\n                        <h2 className=\"text-sm title-font text-gray-500 tracking-widest\">{book.category}</h2>\r\n                        <div className=\"flex mb-4 justify-end\">\r\n                            <Stars rating={book.rating} count={book.numReviews} />\r\n                        </div>\r\n                        <p className=\"leading-relaxed\">{book.summary}</p>\r\n                        <div className=\"flex mt-6 items-center pb-5 border-b-2 border-gray-200 mb-5\" />\r\n                        <div className=\"flex\">\r\n                            <span className=\"title-font font-medium text-2xl text-gray-900\">\r\n                                <div className=\"flex justify-start items-center mt-2\">\r\n                                    <p className=\"text-sm text-green-500 font-bold bg-gray-100 rounded-full py-2 px-2 hover:text-red-500\">\r\n                                        {book.views ? book.views : '0'}\r\n                                    </p>\r\n                                    <p className=\"text-sm text-gray-400 font-bold ml-5\">Views</p>\r\n                                </div>\r\n                            </span>\r\n                            <button className=\"flex ml-auto text-white bg-red-500 border-0 py-2 px-6 focus:outline-none hover:bg-red-600 rounded\">\r\n                                <Link to={`/story/${book._id}/chapter/1`}>\r\n                                    Read\r\n                                </Link>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default BookDetails\r\n","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n//import AddComment from '../../Components/Layout/AddComment';\r\n//import Loader from '../../Components/Message/Loader';\r\nimport ListChapter from '../../Components/Layout/ListChapter';\r\n//import ListComment from '../../Components/Layout/ListComment';\r\nimport BookDetails from '../../Components/Layout/BookDetails';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listStoryDetails } from '../../Redux/Action/StoryAction';\r\nimport LoaderModel from '../../Components/Message/LoaderModel';\r\n\r\n// Memoized child components to prevent unnecessary re-renders\r\nconst MemoizedBookDetails = React.memo(BookDetails);\r\nconst MemoizedListChapter = React.memo(ListChapter);\r\n// const MemoizedAddComment = React.memo(AddComment);\r\n// const MemoizedListComment = React.memo(ListComment);\r\n\r\nconst DisplayBook = () =>{\r\n  const { id } = useParams();  // Get the story ID from the route params\r\n  const dispatch = useDispatch();\r\n\r\n  // Fetch the book details when the component mounts or when 'id' changes\r\n  useEffect(() => {\r\n    if (id && (!book || book._id != id)) {\r\n      // Only dispatch if the story is not already loaded or the id has changed\r\n      dispatch(listStoryDetails(id));\r\n    }\r\n  }, [dispatch, id]);\r\n\r\n  // Redux state to fetch the story details\r\n  const readStory = useSelector((state) => state.readStory);\r\n  const { loading, error, book } = readStory;\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <>\r\n      {error &&\r\n        <div className=\"text-red-500 text-center\">{error}</div>}\r\n\r\n        {/* Details of the Book */}\r\n        \r\n        {loading ? <LoaderModel/> :\r\n        <MemoizedBookDetails book={book} />\r\n      }\r\n\r\n        <div className=\"mt-6 bg-gray-50\">\r\n          <div className=\"px-10 py-6 mx-auto\">\r\n            {/* List of Chapters */}\r\n            {!loading && <MemoizedListChapter />}\r\n\r\n            {/* Comment Section \r\n            <MemoizedAddComment />\r\n            */}\r\n\r\n            {/* All Comments Section \r\n            <MemoizedListComment />\r\n            */}\r\n          </div>\r\n        </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DisplayBook;\r\n"],"names":["_ref","rating","count","_jsxs","className","children","Array","map","_","index","_jsx","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","d","LoaderModel","token","localStorage","getItem","Authconfig","headers","Authorization","concat","withCredentials","config","createStory","fdata","async","dispatch","type","CREATE_STORY_REQUEST","data","axios","post","backend","CREATE_STORY_SUCCESS","payload","err","CREATE_STORY_ERROR","listStory","LIST_STORY_REQUEST","get","LIST_STORY_SUCCESS","LIST_STORY_ERROR","listStoryDetails","storyid","READ_STORY_DETAILS_REQUEST","READ_STORY_DETAILS_SUCCESS","READ_STORY_DETAILS_ERROR","createChapter","CREATE_CHAPTER_REQUEST","CREATE_CHAPTER_SUCCESS","CREATE_CHAPTER_ERROR","listChapter","LIST_CHAPTER_REQUEST","LIST_CHAPTER_SUCCESS","LIST_CHAPTER_ERROR","readChapter","chapterid","READ_CHAPTER_REQUEST","READ_CHAPTER_SUCCESS","READ_CHAPTER_ERROR","listAdminStory","page","arguments","length","undefined","LIST_ADMIN_STORY_REQUEST","LIST_ADMIN_STORY_SUCCESS","LIST_ADMIN_STORY_ERROR","listAdminChapter","id","LIST_ADMIN_CHAPTER_REQUEST","LIST_ADMIN_CHAPTER_SUCCESS","LIST_ADMIN_CHAPTER_ERROR","updateChapter","console","log","UPDATE_CHAPTER_REQUEST","put","UPDATE_CHAPTER_SUCCESS","UPDATE_CHAPTER_ERROR","updateStory","UPDATE_STORY_REQUEST","UPDATE_STORY_SUCCESS","UPDATE_STORY_ERROR","ListChapter","useParams","useDispatch","ListChapterState","useSelector","state","chapters","useEffect","_Fragment","chapter","Link","to","_id","src","cover","alt","title","book","setCover","useState","loading","name","category","Stars","numReviews","summary","views","MemoizedBookDetails","React","BookDetails","MemoizedListChapter","DisplayBook","readStory","error"],"sourceRoot":""}