{"version":3,"file":"static/js/92.6717f3bd.chunk.js","mappings":"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","sources":["Components/Book/BookCover.jsx","Components/Layout/ListBook.jsx","Components/Message/Message.js","Redux/Action/StoryAction.js"],"sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { backend } from '../../Connection/conn'\r\nexport const BookCover = ({ Book }) => {\r\n  if(!Book)return null;\r\n  \r\n  return (\r\n    <Link \r\n    to={`/book/${Book._id}`}\r\n    className=\"max-w-sm mx-auto relative shadow-md rounded-lg cursor-pointer\"\r\n    >\r\n      <img\r\n       src={Book.cover} \r\n       alt={Book.name}\r\n       className=\"w-full h-auto object-cover rounded-lg\" />\r\n      <div className=\"absolute bottom-0 left-0 right-0 h-40 bg-black bg-opacity-50 backdrop-blur text-white p-4 rounded-b-lg\">\r\n        <h1 className=\"text-2xl font-semibold\">{Book.name}</h1>\r\n        <p className=\"mt-2\">{Book.summary}</p>\r\n      </div>\r\n    </Link>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { BookCover } from '../Book/BookCover'\r\nimport { listStory } from '../../Redux/Action/StoryAction'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../Message/Loader'\r\nimport Message from '../Message/Message'\r\n\r\nconst ListBook = () => {\r\n    const dispatch = useDispatch()\r\n    const listStoryy = useSelector(state => state.listStory)\r\n    const { loading, error, Books } = listStoryy\r\n\r\n    useEffect(() => {\r\n        if (Books === undefined) {\r\n            dispatch(listStory());\r\n        }\r\n    }, [Books])\r\n   // console.log(Books?.length)\r\n  //  console.log(Books?.length <= 1)\r\n\r\n    return (\r\n        <>\r\n\r\n            <h1 className='m-1 p-5 text-5xl '>My Book Collection</h1>\r\n            {loading && <Loader />}\r\n            {error && <Message>{error}</Message>}\r\n            <div className=\"container mx-auto p-4 lg:h-auto flex items-center justify-center\">\r\n                    {Books?.length <= 1 && <h1>{`No books available ...!`}</h1>}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n           \r\n                    {\r\n                        Books && Books.map((book, index) => (\r\n\r\n                            <BookCover Book={book} key={index} />\r\n\r\n                        ))\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListBook\r\n","import React from 'react'\r\n\r\nconst Message = ({Children}) => {\r\n  return (\r\n    <div>\r\n      {Children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios'\r\nimport {\r\n    CREATE_STORY_REQUEST,\r\n    CREATE_STORY_SUCCESS,\r\n    CREATE_STORY_ERROR,\r\n\r\n    CREATE_CHAPTER_REQUEST,\r\n    CREATE_CHAPTER_SUCCESS,\r\n    CREATE_CHAPTER_ERROR,\r\n\r\n    LIST_STORY_REQUEST,\r\n    LIST_STORY_SUCCESS,\r\n    LIST_STORY_ERROR,\r\n\r\n    READ_CHAPTER_REQUEST,\r\n    READ_CHAPTER_SUCCESS,\r\n    READ_CHAPTER_ERROR,\r\n\r\n    READ_STORY_DETAILS_REQUEST,\r\n    READ_STORY_DETAILS_SUCCESS,\r\n    READ_STORY_DETAILS_ERROR,\r\n\r\n    LIST_CHAPTER_REQUEST,\r\n    LIST_CHAPTER_SUCCESS,\r\n    LIST_CHAPTER_ERROR,\r\n\r\n    UPDATE_CHAPTER_REQUEST,\r\n    UPDATE_CHAPTER_SUCCESS,\r\n    UPDATE_CHAPTER_ERROR,\r\n\r\n    LIST_ADMIN_STORY_REQUEST,\r\n    LIST_ADMIN_STORY_SUCCESS,\r\n    LIST_ADMIN_STORY_ERROR,\r\n\r\n    LIST_ADMIN_CHAPTER_REQUEST,\r\n    LIST_ADMIN_CHAPTER_SUCCESS,\r\n    LIST_ADMIN_CHAPTER_ERROR,\r\n    UPDATE_STORY_REQUEST,\r\n    UPDATE_STORY_SUCCESS,\r\n    UPDATE_STORY_ERROR,\r\n\r\n} from '../Constant/StoryConstant'\r\nimport { backend } from '../../Connection/conn'\r\n\r\nconst token = localStorage.getItem('token') ? localStorage.getItem('token') : null;\r\n\r\nconst Authconfig = {\r\n    headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n    },\r\n    withCredentials: true,\r\n}\r\n\r\nconst config = {\r\n    headers: {\r\n        'Content-type': 'application/json',\r\n    }\r\n}\r\n\r\n\r\nexport const createStory = (fdata) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CREATE_STORY_REQUEST })\r\n\r\n        const { data } = await axios.post(`${backend}/api/story/create/`, fdata, Authconfig)\r\n\r\n        dispatch({\r\n            type: CREATE_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: CREATE_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listStory = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_STORY_REQUEST })\r\n        const token = localStorage.getItem('token') ? localStorage.getItem('token') : null;\r\n        const Authconfig = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                ...(token && { Authorization: `Bearer ${token}` }), \r\n            },\r\n            withCredentials: true,\r\n        }\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/list`, Authconfig)\r\n        dispatch({\r\n            type: LIST_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listStoryDetails = (storyid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: READ_STORY_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}`, config)\r\n        \r\n        dispatch({\r\n            type: READ_STORY_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: READ_STORY_DETAILS_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const createChapter = (storyid, fdata) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CREATE_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.post(`${backend}/api/story/${storyid}/chapter/create/`, fdata, Authconfig)\r\n        dispatch({\r\n            type: CREATE_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: CREATE_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listChapter = (storyid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}/chapter/list`, config)\r\n        dispatch({\r\n            type: LIST_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const readChapter = (storyid, chapterid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: READ_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}/chapter/${chapterid}`, config)\r\n        dispatch({\r\n            type: READ_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: READ_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listAdminStory = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_ADMIN_STORY_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/admin/story/list`, Authconfig)\r\n        dispatch({\r\n            type: LIST_ADMIN_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_ADMIN_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listAdminChapter = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_ADMIN_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/admin/story/${id}/chapter/list`, Authconfig)\r\n        dispatch({\r\n            type: LIST_ADMIN_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_ADMIN_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateChapter = (storyid, chapterid, fdata) => async (dispatch) => {\r\n    try {\r\n        console.log(fdata)\r\n        dispatch({ type: UPDATE_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.put(`${backend}/api/story/${storyid}/chapter/${chapterid}/update`, fdata, Authconfig)\r\n        dispatch({\r\n            type: UPDATE_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: UPDATE_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateStory = (storyid, fdata) => async (dispatch) => {\r\n    try {\r\n        console.log(fdata)\r\n        dispatch({ type: UPDATE_STORY_REQUEST })\r\n\r\n        const { data } = await axios.put(`${backend}/api/story/${storyid}/update`, fdata, Authconfig)\r\n        dispatch({\r\n            type: UPDATE_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: UPDATE_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}"],"names":["BookCover","_ref","Book","_jsxs","Link","to","concat","_id","className","children","_jsx","src","cover","alt","name","summary","ListBook","dispatch","useDispatch","listStoryy","useSelector","state","listStory","loading","error","Books","useEffect","undefined","_Fragment","Loader","Message","length","map","book","index","Children","token","localStorage","getItem","Authconfig","headers","Authorization","withCredentials","config","createStory","fdata","async","type","CREATE_STORY_REQUEST","data","axios","post","backend","CREATE_STORY_SUCCESS","payload","err","CREATE_STORY_ERROR","LIST_STORY_REQUEST","get","LIST_STORY_SUCCESS","LIST_STORY_ERROR","listStoryDetails","storyid","READ_STORY_DETAILS_REQUEST","READ_STORY_DETAILS_SUCCESS","READ_STORY_DETAILS_ERROR","createChapter","CREATE_CHAPTER_REQUEST","CREATE_CHAPTER_SUCCESS","CREATE_CHAPTER_ERROR","listChapter","LIST_CHAPTER_REQUEST","LIST_CHAPTER_SUCCESS","LIST_CHAPTER_ERROR","readChapter","chapterid","READ_CHAPTER_REQUEST","READ_CHAPTER_SUCCESS","READ_CHAPTER_ERROR","listAdminStory","LIST_ADMIN_STORY_REQUEST","LIST_ADMIN_STORY_SUCCESS","LIST_ADMIN_STORY_ERROR","listAdminChapter","id","LIST_ADMIN_CHAPTER_REQUEST","LIST_ADMIN_CHAPTER_SUCCESS","LIST_ADMIN_CHAPTER_ERROR","updateChapter","console","log","UPDATE_CHAPTER_REQUEST","put","UPDATE_CHAPTER_SUCCESS","UPDATE_CHAPTER_ERROR","updateStory","UPDATE_STORY_REQUEST","UPDATE_STORY_SUCCESS","UPDATE_STORY_ERROR"],"sourceRoot":""}