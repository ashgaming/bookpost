{"version":3,"file":"static/js/272.d096af72.chunk.js","mappings":"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","sources":["Components/Element/BackButton.jsx","Components/Message/Message.js","Helper/StoryHelp.js","Redux/Action/StoryAction.js","Screen/AddStoryScreen/CreateStory.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst BackButton = ({url}) => {\r\n    const navigate = useNavigate();\r\n    const handleClick = () => {\r\n        navigate(url);\r\n    };\r\n    return (\r\n        <div className=\"w-full flex justify-start my-5\">\r\n            <button\r\n                className=\"bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-700 transition-colors duration-200\"\r\n                onClick={handleClick}\r\n            >\r\n                Go Back\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BackButton\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst Message = ({Children}) => {\r\n  return (\r\n    <div>\r\n      {Children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios';\r\nimport { backend } from '../Connection/conn';\r\n\r\n\r\nexport const UploadImage = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n\r\n\r\n    const token = localStorage.getItem('token');\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n        withCredentials: true,\r\n    };\r\n    \r\n\r\n    try {\r\n        const response = await axios.post(`${backend}/api/upload-image/`, formData, config);\r\n\r\n        if (response.status === 200) {\r\n            const uploadedImageUrl = `${backend}` + response.data.image_url;\r\n            alert('Image uploaded successfully');\r\n            return uploadedImageUrl;\r\n        } else {\r\n            alert('Failed to upload image');\r\n        }\r\n    } catch (err) {\r\n        alert('Error uploading image:', err);\r\n        throw new Error('Image upload failed');\r\n    }\r\n};\r\n","import axios from 'axios'\r\nimport {\r\n    CREATE_STORY_REQUEST,\r\n    CREATE_STORY_SUCCESS,\r\n    CREATE_STORY_ERROR,\r\n\r\n    CREATE_CHAPTER_REQUEST,\r\n    CREATE_CHAPTER_SUCCESS,\r\n    CREATE_CHAPTER_ERROR,\r\n\r\n    LIST_STORY_REQUEST,\r\n    LIST_STORY_SUCCESS,\r\n    LIST_STORY_ERROR,\r\n\r\n    READ_CHAPTER_REQUEST,\r\n    READ_CHAPTER_SUCCESS,\r\n    READ_CHAPTER_ERROR,\r\n\r\n    READ_STORY_DETAILS_REQUEST,\r\n    READ_STORY_DETAILS_SUCCESS,\r\n    READ_STORY_DETAILS_ERROR,\r\n\r\n    LIST_CHAPTER_REQUEST,\r\n    LIST_CHAPTER_SUCCESS,\r\n    LIST_CHAPTER_ERROR,\r\n\r\n    UPDATE_CHAPTER_REQUEST,\r\n    UPDATE_CHAPTER_SUCCESS,\r\n    UPDATE_CHAPTER_ERROR,\r\n\r\n    LIST_ADMIN_STORY_REQUEST,\r\n    LIST_ADMIN_STORY_SUCCESS,\r\n    LIST_ADMIN_STORY_ERROR,\r\n\r\n    LIST_ADMIN_CHAPTER_REQUEST,\r\n    LIST_ADMIN_CHAPTER_SUCCESS,\r\n    LIST_ADMIN_CHAPTER_ERROR,\r\n    UPDATE_STORY_REQUEST,\r\n    UPDATE_STORY_SUCCESS,\r\n    UPDATE_STORY_ERROR,\r\n\r\n} from '../Constant/StoryConstant'\r\nimport { backend } from '../../Connection/conn'\r\n\r\nconst token = localStorage.getItem('token') ? localStorage.getItem('token') : null;\r\n\r\nconst Authconfig = {\r\n    headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n    },\r\n    withCredentials: true,\r\n}\r\n\r\nconst config = {\r\n    headers: {\r\n        'Content-type': 'application/json',\r\n    }\r\n}\r\n\r\n\r\nexport const createStory = (fdata) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CREATE_STORY_REQUEST })\r\n\r\n        const { data } = await axios.post(`${backend}/api/story/create/`, fdata, Authconfig)\r\n\r\n        dispatch({\r\n            type: CREATE_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: CREATE_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listStory = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_STORY_REQUEST })\r\n        const token = localStorage.getItem('token') ? localStorage.getItem('token') : null;\r\n        const Authconfig = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                ...(token && { Authorization: `Bearer ${token}` }), \r\n            },\r\n            withCredentials: true,\r\n        }\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/list`, Authconfig)\r\n        dispatch({\r\n            type: LIST_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listStoryDetails = (storyid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: READ_STORY_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}`, config)\r\n        \r\n        dispatch({\r\n            type: READ_STORY_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: READ_STORY_DETAILS_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const createChapter = (storyid, fdata) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CREATE_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.post(`${backend}/api/story/${storyid}/chapter/create/`, fdata, Authconfig)\r\n        dispatch({\r\n            type: CREATE_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: CREATE_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listChapter = (storyid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}/chapter/list`, config)\r\n        dispatch({\r\n            type: LIST_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const readChapter = (storyid, chapterid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: READ_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}/chapter/${chapterid}`, config)\r\n        dispatch({\r\n            type: READ_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: READ_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listAdminStory = (page=1) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_ADMIN_STORY_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/admin/story/list${page ? `?page=${page}` : ''}`, Authconfig)\r\n        dispatch({\r\n            type: LIST_ADMIN_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_ADMIN_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listAdminChapter = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_ADMIN_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/admin/story/${id}/chapter/list`, Authconfig)\r\n        dispatch({\r\n            type: LIST_ADMIN_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_ADMIN_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateChapter = (storyid, chapterid, fdata) => async (dispatch) => {\r\n    try {\r\n        console.log(fdata)\r\n        dispatch({ type: UPDATE_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.put(`${backend}/api/story/${storyid}/chapter/${chapterid}/update`, fdata, Authconfig)\r\n        dispatch({\r\n            type: UPDATE_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: UPDATE_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateStory = (storyid, fdata) => async (dispatch) => {\r\n    try {\r\n        console.log(fdata)\r\n        dispatch({ type: UPDATE_STORY_REQUEST })\r\n\r\n        const { data } = await axios.put(`${backend}/api/story/${storyid}/update`, fdata, Authconfig)\r\n        dispatch({\r\n            type: UPDATE_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: UPDATE_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { UploadImage } from '../../Helper/StoryHelp';\r\nimport { createStory } from '../../Redux/Action/StoryAction';\r\nimport Message from '../../Components/Message/Message';\r\nimport Loader from '../../Components/Message/Loader';\r\nimport { CREATE_STORY_RESET } from '../../Redux/Constant/StoryConstant';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport BackButton from '../../Components/Element/BackButton';\r\n\r\n\r\nconst CreateStory = ({ dispatch }) => {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const CreateStory = useSelector(state => state.createStory);\r\n    const { loading, error, success } = CreateStory;\r\n\r\n    const titleRef = useRef(null);\r\n    const desRef = useRef(null);\r\n    const imgRef = useRef(null);\r\n    const catRef = useRef(null);\r\n    const [iurl, setIurl] = useState(''); // Image URL state\r\n    const [formData, setFormData] = useState({\r\n        title: '',\r\n        description: '',\r\n        image: ''\r\n    });\r\n    const [uploading, setUploading] = useState(false); // Loader state for image upload\r\n    const [uploadProgress, setUploadProgress] = useState(0); // Upload progress state\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Update formData state with current ref values\r\n        setFormData({\r\n            title: titleRef.current.value,\r\n            description: desRef.current.value,\r\n            category: catRef.current.value,\r\n            image: iurl, // Image URL\r\n        });\r\n\r\n        dispatch(createStory({\r\n            title: titleRef.current.value,\r\n            description: desRef.current.value,\r\n            category: catRef.current.value,\r\n            image: iurl, // Image URL\r\n        }));\r\n\r\n       \r\n    };\r\n\r\n    useEffect(()=>{\r\n        if (success) {\r\n            ResetAllInput();\r\n            dispatch({type:CREATE_STORY_RESET})\r\n            navigate('/')\r\n        }\r\n    },[success])\r\n\r\n    const ResetAllInput = () => {\r\n        setFormData({\r\n            title: '',\r\n            description: '',\r\n            image: ''\r\n        });\r\n\r\n        titleRef.current.value = null;\r\n        desRef.current.value = null;\r\n        imgRef.current.value = null;\r\n        catRef.current.value = null;\r\n\r\n        setIurl('');\r\n    };\r\n\r\n    const uploadImage = async (e) => {\r\n        e.preventDefault();\r\n        const file = e.target.files[0]; // Get the selected file\r\n        if (file) {\r\n            setUploading(true); // Set uploading to true\r\n            setUploadProgress(0); // Reset progress\r\n\r\n            try {\r\n                // Modify the UploadImage function to track progress\r\n                const uploadedUrl = await UploadImage(file, (progressEvent) => {\r\n                    const progress = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n                    setUploadProgress(progress); // Update progress\r\n                });\r\n                setIurl(uploadedUrl); // Set the image URL for display\r\n            } catch (error) {\r\n                console.error(\"Image upload failed\", error);\r\n            } finally {\r\n                setUploading(false); // Reset uploading state\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"form bg-white p-6 my-10 relative max-w-lg mx-auto shadow-lg rounded-lg\">\r\n            <BackButton url={`/list-story`}/>\r\n            <h3 className=\"text-2xl text-gray-900 font-semibold\">Add your latest story!</h3>\r\n            <p className=\"text-gray-600\">Let me know what is in your mind</p>\r\n\r\n            {loading && <Loader />}\r\n            {error && <Message>{error}</Message>}\r\n            {uploading && (\r\n                <div className=\"flex flex-col items-center\">\r\n                    <Loader />\r\n                    <p>Uploading image: {uploadProgress}%</p>\r\n                </div>\r\n            )}\r\n            <div className=\"flex space-x-5 mt-3\">\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Story Name\"\r\n                    className=\"border p-2 w-1/2\"\r\n                    ref={titleRef} // Referencing the title input\r\n                />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"category\"\r\n                    placeholder=\"Story Category\"\r\n                    className=\"border p-2 w-1/2\"\r\n                    ref={catRef} // Referencing the title input\r\n                />\r\n            </div>\r\n\r\n            <div className='py-5'>\r\n                {/* Display the uploaded image */}\r\n                {iurl && <img src={iurl} alt=\"Uploaded cover\" loading='lazy' />}\r\n\r\n                <input\r\n                    type=\"file\"\r\n                    name=\"cover\"\r\n                    accept=\"image/*\" // Ensure only images are uploaded\r\n                    onChange={uploadImage} // Call upload function when file is selected\r\n                    className=\"border p-2\"\r\n                    ref={imgRef}\r\n                />\r\n            </div>\r\n\r\n            <textarea\r\n                name=\"description\"\r\n                cols={10}\r\n                rows={3}\r\n                maxLength={2000}\r\n                placeholder=\"Summarize your story\"\r\n                className=\"border p-2 mt-3 w-full\"\r\n                ref={desRef} // Referencing the description input\r\n            ></textarea>\r\n\r\n            <input\r\n                type=\"submit\"\r\n                value=\"Submit\"\r\n                className=\"w-full mt-6 bg-blue-600 hover:bg-blue-500 text-white font-semibold p-3\"\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default CreateStory;\r\n"],"names":["_ref","url","navigate","useNavigate","_jsx","className","children","onClick","handleClick","Children","UploadImage","async","formData","FormData","append","file","token","localStorage","getItem","config","headers","Authorization","concat","withCredentials","response","axios","post","backend","status","uploadedImageUrl","data","image_url","alert","err","Error","Authconfig","createStory","fdata","dispatch","type","CREATE_STORY_REQUEST","CREATE_STORY_SUCCESS","payload","CREATE_STORY_ERROR","listStory","LIST_STORY_REQUEST","get","LIST_STORY_SUCCESS","LIST_STORY_ERROR","listStoryDetails","storyid","READ_STORY_DETAILS_REQUEST","READ_STORY_DETAILS_SUCCESS","READ_STORY_DETAILS_ERROR","createChapter","CREATE_CHAPTER_REQUEST","CREATE_CHAPTER_SUCCESS","CREATE_CHAPTER_ERROR","listChapter","LIST_CHAPTER_REQUEST","LIST_CHAPTER_SUCCESS","LIST_CHAPTER_ERROR","readChapter","chapterid","READ_CHAPTER_REQUEST","READ_CHAPTER_SUCCESS","READ_CHAPTER_ERROR","listAdminStory","page","arguments","length","undefined","LIST_ADMIN_STORY_REQUEST","LIST_ADMIN_STORY_SUCCESS","LIST_ADMIN_STORY_ERROR","listAdminChapter","id","LIST_ADMIN_CHAPTER_REQUEST","LIST_ADMIN_CHAPTER_SUCCESS","LIST_ADMIN_CHAPTER_ERROR","updateChapter","console","log","UPDATE_CHAPTER_REQUEST","put","UPDATE_CHAPTER_SUCCESS","UPDATE_CHAPTER_ERROR","updateStory","UPDATE_STORY_REQUEST","UPDATE_STORY_SUCCESS","UPDATE_STORY_ERROR","CreateStory","useSelector","state","loading","error","success","titleRef","useRef","desRef","imgRef","catRef","iurl","setIurl","useState","setFormData","title","description","image","uploading","setUploading","uploadProgress","setUploadProgress","useEffect","ResetAllInput","CREATE_STORY_RESET","current","value","_jsxs","onSubmit","e","preventDefault","category","BackButton","Loader","Message","name","placeholder","ref","src","alt","accept","onChange","target","files","uploadedUrl","progressEvent","progress","Math","round","loaded","total","cols","rows","maxLength"],"sourceRoot":""}