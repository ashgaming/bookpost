{"version":3,"file":"static/js/640.bdac8689.chunk.js","mappings":"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","sources":["Components/Element/BackButton.jsx","Components/Message/LoaderModel.jsx","Components/Message/Message.js","Helper/StoryHelp.js","Redux/Action/StoryAction.js","Screen/AddStoryScreen/EditStoryScreen.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst BackButton = ({url}) => {\r\n    const navigate = useNavigate();\r\n    const handleClick = () => {\r\n        navigate(url);\r\n    };\r\n    return (\r\n        <div className=\"w-full flex justify-start my-5\">\r\n            <button\r\n                className=\"bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-700 transition-colors duration-200\"\r\n                onClick={handleClick}\r\n            >\r\n                Go Back\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BackButton\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst LoaderModel = () => {\r\n  return (\r\n    <div className=\"fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-75 z-50\">\r\n      <div className=\"text-center\">\r\n        <div className=\"loader ease-linear rounded-full border-8 border-t-8 border-gray-200 h-32 w-32 mb-4\"></div>\r\n        <h2 className=\"text-white text-xl font-semibold\">Loading...</h2>\r\n        <p className=\"text-white text-sm mt-2\">Please wait</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderModel;\r\n","import React from 'react'\r\n\r\nconst Message = ({Children}) => {\r\n  return (\r\n    <div>\r\n      {Children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios';\r\nimport { backend } from '../Connection/conn';\r\n\r\n\r\nexport const UploadImage = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n\r\n\r\n    const token = localStorage.getItem('token');\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n        withCredentials: true,\r\n    };\r\n\r\n\r\n    try {\r\n        const response = await axios.post(`${backend}/api/upload-image/`, formData, config);\r\n        console.log(response.data)\r\n        return response.data.image_url;\r\n    } catch (err) {\r\n        alert('Error uploading image:', err);\r\n        throw new Error('Image upload failed');\r\n    }\r\n};\r\n","import axios from 'axios'\r\nimport {\r\n    CREATE_STORY_REQUEST,\r\n    CREATE_STORY_SUCCESS,\r\n    CREATE_STORY_ERROR,\r\n\r\n    CREATE_CHAPTER_REQUEST,\r\n    CREATE_CHAPTER_SUCCESS,\r\n    CREATE_CHAPTER_ERROR,\r\n\r\n    LIST_STORY_REQUEST,\r\n    LIST_STORY_SUCCESS,\r\n    LIST_STORY_ERROR,\r\n\r\n    READ_CHAPTER_REQUEST,\r\n    READ_CHAPTER_SUCCESS,\r\n    READ_CHAPTER_ERROR,\r\n\r\n    READ_STORY_DETAILS_REQUEST,\r\n    READ_STORY_DETAILS_SUCCESS,\r\n    READ_STORY_DETAILS_ERROR,\r\n\r\n    LIST_CHAPTER_REQUEST,\r\n    LIST_CHAPTER_SUCCESS,\r\n    LIST_CHAPTER_ERROR,\r\n\r\n    UPDATE_CHAPTER_REQUEST,\r\n    UPDATE_CHAPTER_SUCCESS,\r\n    UPDATE_CHAPTER_ERROR,\r\n\r\n    LIST_ADMIN_STORY_REQUEST,\r\n    LIST_ADMIN_STORY_SUCCESS,\r\n    LIST_ADMIN_STORY_ERROR,\r\n\r\n    LIST_ADMIN_CHAPTER_REQUEST,\r\n    LIST_ADMIN_CHAPTER_SUCCESS,\r\n    LIST_ADMIN_CHAPTER_ERROR,\r\n    UPDATE_STORY_REQUEST,\r\n    UPDATE_STORY_SUCCESS,\r\n    UPDATE_STORY_ERROR,\r\n\r\n} from '../Constant/StoryConstant'\r\nimport { backend } from '../../Connection/conn'\r\n\r\nconst token = localStorage.getItem('token') ? localStorage.getItem('token') : null;\r\n\r\nconst Authconfig = {\r\n    headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n    },\r\n    withCredentials: true,\r\n}\r\n\r\nconst config = {\r\n    headers: {\r\n        'Content-type': 'application/json',\r\n    }\r\n}\r\n\r\n\r\nexport const createStory = (fdata) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CREATE_STORY_REQUEST })\r\n\r\n        const { data } = await axios.post(`${backend}/api/story/create/`, fdata, Authconfig)\r\n\r\n        dispatch({\r\n            type: CREATE_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: CREATE_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listStory = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_STORY_REQUEST })\r\n        const token = localStorage.getItem('token') ? localStorage.getItem('token') : null;\r\n        const Authconfig = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                ...(token && { Authorization: `Bearer ${token}` }), \r\n            },\r\n            withCredentials: true,\r\n        }\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/list`, Authconfig)\r\n        dispatch({\r\n            type: LIST_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listStoryDetails = (storyid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: READ_STORY_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}`, config)\r\n        \r\n        dispatch({\r\n            type: READ_STORY_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: READ_STORY_DETAILS_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const createChapter = (storyid, fdata) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CREATE_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.post(`${backend}/api/story/${storyid}/chapter/create/`, fdata, Authconfig)\r\n        dispatch({\r\n            type: CREATE_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: CREATE_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listChapter = (storyid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}/chapter/list`, config)\r\n        dispatch({\r\n            type: LIST_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const readChapter = (storyid, chapterid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: READ_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}/chapter/${chapterid}`, config)\r\n        dispatch({\r\n            type: READ_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: READ_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listAdminStory = (page=1) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_ADMIN_STORY_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/admin/story/list${page ? `?page=${page}` : ''}`, Authconfig)\r\n        dispatch({\r\n            type: LIST_ADMIN_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_ADMIN_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listAdminChapter = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_ADMIN_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/admin/story/${id}/chapter/list`, Authconfig)\r\n        dispatch({\r\n            type: LIST_ADMIN_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_ADMIN_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateChapter = (storyid, chapterid, fdata) => async (dispatch) => {\r\n    try {\r\n        console.log(fdata)\r\n        dispatch({ type: UPDATE_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.put(`${backend}/api/story/${storyid}/chapter/${chapterid}/update`, fdata, Authconfig)\r\n        dispatch({\r\n            type: UPDATE_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: UPDATE_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateStory = (storyid, fdata) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: UPDATE_STORY_REQUEST })\r\n\r\n        const { data } = await axios.put(`${backend}/api/story/${storyid}/update`, fdata, Authconfig)\r\n        dispatch({\r\n            type: UPDATE_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: UPDATE_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { UploadImage } from '../../Helper/StoryHelp';\r\nimport { listStoryDetails, updateStory } from '../../Redux/Action/StoryAction';\r\nimport Loader from '../../Components/Message/Loader';\r\nimport Message from '../../Components/Message/Message';\r\nimport LoaderModel from '../../Components/Message/LoaderModel';\r\nimport { READ_CHAPTER_RESET, UPDATE_STORY_RESET } from '../../Redux/Constant/StoryConstant';\r\nimport BackButton from '../../Components/Element/BackButton';\r\n\r\nconst EditStoryScreen = ({ dispatch }) => {\r\n    const { storyid } = useParams();\r\n    const [image, setImage] = useState('');\r\n    const [isFormInitialized, setIsFormInitialized] = useState(false);\r\n\r\n    // Fetch chapter state from Redux\r\n    const readStory = useSelector(state => state.readStory);\r\n    const { loading, error, book } = readStory;\r\n\r\n    const updateStoryState = useSelector(state => state.updateStory);\r\n    const { loading: updateLoading,\r\n        error: updateError,\r\n        success } = updateStoryState;\r\n\r\n    // Form fields refs\r\n    const titleRef = useRef(null);\r\n    const summaryRef = useRef(null);\r\n    const catRef = useRef(null);\r\n\r\n\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [oldForm, setOldForm] = useState({})\r\n    const [imgUploading, setImgUploading] = useState(false)\r\n    const [imgUpError, setImgUpError] = useState(null)\r\n\r\n\r\n    // Step 1: Fetch story if not already loaded or chapterid doesn't match\r\n    useEffect(() => {\r\n        if (!book || book?._id != storyid) {\r\n            dispatch(listStoryDetails(storyid));\r\n        }\r\n\r\n        console.log(book)\r\n        const initializeForm = async () => {\r\n            if (book && book?._id == storyid && !isFormInitialized) {\r\n                titleRef.current.value = book.name || '';\r\n                catRef.current.value = book.category || '';\r\n                summaryRef.current.value = book.summary || '';\r\n\r\n                setImage(book.cover || '');\r\n            }\r\n            setIsFormInitialized(true);  // Mark form as initialized\r\n        };\r\n\r\n        if (book && book?._id == storyid && !isFormInitialized) {\r\n            initializeForm();\r\n            setOldForm({\r\n                title: book.title,\r\n                category: catRef.current.value,\r\n                summary: summaryRef.current.value,\r\n                cover: book.cover,\r\n            })\r\n            setImage(book.cover)\r\n        }\r\n\r\n    }, [dispatch, storyid, isFormInitialized, book]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = {}; // Initialize an empty object\r\n\r\n        // Conditionally add properties based on changes\r\n        if (titleRef.current.value !== oldForm.title) {\r\n            formData.title = titleRef.current.value; // Add title if it has changed\r\n        }\r\n        if (catRef.current.value !== oldForm.category) {\r\n            formData.category = catRef.current.value; // Add category if it has changed\r\n        }\r\n        if (summaryRef.current.value !== oldForm.summary) {\r\n            formData.summary = summaryRef.current.value; // Add summary if it has changed\r\n        }\r\n        if (image !== oldForm.cover) {\r\n            console.log('image', image)\r\n            console.log('old img', oldForm.image)\r\n            formData.cover = image; // Add cover if it has changed\r\n        }\r\n\r\n        dispatch(updateStory(storyid, formData));\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            alert('Story Updated ...')\r\n            navigate(`/list-story`, { replace: true });\r\n            dispatch({ type: UPDATE_STORY_RESET })\r\n            dispatch({ type: READ_CHAPTER_RESET })\r\n        }\r\n    }, [success])\r\n\r\n    const uploadImage = async (e) => {\r\n        e.preventDefault();\r\n\r\n        setImgUploading(true);\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            try {\r\n                const uploadedUrl = await UploadImage(file);\r\n                setImage(uploadedUrl);\r\n            } catch (error) {\r\n                setImgUpError(error);\r\n            }\r\n        }\r\n\r\n        setImgUploading(false)\r\n    };\r\n\r\n    if (loading) return <Loader />;\r\n    if (error) return <Message>{error}</Message>;\r\n    if (!book?._id) return null;\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"form bg-white p-6 my-10 relative max-w-lg mx-auto shadow-lg rounded-lg\">\r\n            <BackButton url={`/list-story`} />\r\n            {updateLoading && <LoaderModel />}\r\n\r\n            <h3 className=\"text-2xl text-gray-900 font-semibold\">Edit Story</h3>\r\n            {updateError && <Message>{updateError}</Message>}\r\n            <div className=\"flex space-x-5 mt-3\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Title\"\r\n                    className=\"border p-2 w-1/2\"\r\n                    ref={titleRef}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"flex space-x-5 mt-3 mb-2\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Category\"\r\n                    className=\"border p-2 w-1/2\"\r\n                    ref={catRef}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"relative max-h-52 aspect-[9/16] bg-gray-200 overflow-hidden left-1/3 align-middle\">\r\n                <img\r\n                    src={image}\r\n                    alt=\"\"\r\n                    className=\"object-cover w-full h-full absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\r\n                />\r\n            </div>\r\n\r\n            {imgUploading && <Loader />}\r\n            {imgUpError && <Message>{imgUpError}</Message>}\r\n            <div className=\"flex space-x-5 mt-3\">\r\n                <input\r\n                    type=\"file\"\r\n                    onChange={uploadImage}\r\n                    className=\"border p-2 w-1/2\"\r\n                    accept=\"image/*\"\r\n                />\r\n            </div>\r\n\r\n            <h1>Summary</h1>\r\n            <textarea\r\n                placeholder=\"Write Summary here\"\r\n                className=\"border p-2 mt-3 w-full\"\r\n                ref={summaryRef}\r\n                maxLength={2000}\r\n            />\r\n\r\n\r\n            <input\r\n                type=\"submit\"\r\n                value=\"Update Story\"\r\n                className=\"w-full mt-6 bg-blue-600 hover:bg-blue-500 text-white font-semibold p-3\"\r\n            />\r\n\r\n\r\n\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default EditStoryScreen;\r\n"],"names":["_ref","url","navigate","useNavigate","_jsx","className","children","onClick","handleClick","LoaderModel","_jsxs","Children","UploadImage","async","formData","FormData","append","file","token","localStorage","getItem","config","headers","Authorization","concat","withCredentials","response","axios","post","backend","console","log","data","image_url","err","alert","Error","Authconfig","createStory","fdata","dispatch","type","CREATE_STORY_REQUEST","CREATE_STORY_SUCCESS","payload","CREATE_STORY_ERROR","listStory","LIST_STORY_REQUEST","get","LIST_STORY_SUCCESS","LIST_STORY_ERROR","listStoryDetails","storyid","READ_STORY_DETAILS_REQUEST","READ_STORY_DETAILS_SUCCESS","READ_STORY_DETAILS_ERROR","createChapter","CREATE_CHAPTER_REQUEST","CREATE_CHAPTER_SUCCESS","CREATE_CHAPTER_ERROR","listChapter","LIST_CHAPTER_REQUEST","LIST_CHAPTER_SUCCESS","LIST_CHAPTER_ERROR","readChapter","chapterid","READ_CHAPTER_REQUEST","READ_CHAPTER_SUCCESS","READ_CHAPTER_ERROR","listAdminStory","page","arguments","length","undefined","LIST_ADMIN_STORY_REQUEST","LIST_ADMIN_STORY_SUCCESS","LIST_ADMIN_STORY_ERROR","listAdminChapter","id","LIST_ADMIN_CHAPTER_REQUEST","LIST_ADMIN_CHAPTER_SUCCESS","LIST_ADMIN_CHAPTER_ERROR","updateChapter","UPDATE_CHAPTER_REQUEST","put","UPDATE_CHAPTER_SUCCESS","UPDATE_CHAPTER_ERROR","updateStory","UPDATE_STORY_REQUEST","UPDATE_STORY_SUCCESS","UPDATE_STORY_ERROR","useParams","image","setImage","useState","isFormInitialized","setIsFormInitialized","readStory","useSelector","state","loading","error","book","updateStoryState","updateLoading","updateError","success","titleRef","useRef","summaryRef","catRef","oldForm","setOldForm","imgUploading","setImgUploading","imgUpError","setImgUpError","useEffect","_id","current","value","name","category","summary","cover","initializeForm","title","replace","UPDATE_STORY_RESET","READ_CHAPTER_RESET","Loader","Message","onSubmit","e","preventDefault","BackButton","placeholder","ref","src","alt","onChange","target","files","uploadedUrl","accept","maxLength"],"sourceRoot":""}