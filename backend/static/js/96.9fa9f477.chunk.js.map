{"version":3,"file":"static/js/96.9fa9f477.chunk.js","mappings":"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","sources":["Components/Element/Stars.jsx","Components/Message/Message.js","Redux/Action/StoryAction.js","Screen/BookScreen/ReadChapterScreen.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nconst Stars = ({rating,count}) => {\r\n    return (\r\n        <span className=\"flex items-center\">\r\n            {[...Array(5)].map((_, index) => (\r\n                <svg\r\n                    key={index}\r\n                    fill={rating >= index + 1 ? 'currentColor' : 'none'}\r\n                    stroke=\"currentColor\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    className=\"w-4 h-4 text-red-500\"\r\n                    viewBox=\"0 0 24 24\"\r\n                >\r\n                    <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\" />\r\n                </svg>\r\n            ))}\r\n            <span className=\"text-gray-600 ml-3\">{count} Reviews</span>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Stars\r\n","import React from 'react'\r\n\r\nconst Message = ({Children}) => {\r\n  return (\r\n    <div>\r\n      {Children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios'\r\nimport {\r\n    CREATE_STORY_REQUEST,\r\n    CREATE_STORY_SUCCESS,\r\n    CREATE_STORY_ERROR,\r\n\r\n    CREATE_CHAPTER_REQUEST,\r\n    CREATE_CHAPTER_SUCCESS,\r\n    CREATE_CHAPTER_ERROR,\r\n\r\n    LIST_STORY_REQUEST,\r\n    LIST_STORY_SUCCESS,\r\n    LIST_STORY_ERROR,\r\n\r\n    READ_CHAPTER_REQUEST,\r\n    READ_CHAPTER_SUCCESS,\r\n    READ_CHAPTER_ERROR,\r\n\r\n    READ_STORY_DETAILS_REQUEST,\r\n    READ_STORY_DETAILS_SUCCESS,\r\n    READ_STORY_DETAILS_ERROR,\r\n\r\n    LIST_CHAPTER_REQUEST,\r\n    LIST_CHAPTER_SUCCESS,\r\n    LIST_CHAPTER_ERROR,\r\n\r\n    UPDATE_CHAPTER_REQUEST,\r\n    UPDATE_CHAPTER_SUCCESS,\r\n    UPDATE_CHAPTER_ERROR,\r\n\r\n    LIST_ADMIN_STORY_REQUEST,\r\n    LIST_ADMIN_STORY_SUCCESS,\r\n    LIST_ADMIN_STORY_ERROR,\r\n\r\n    LIST_ADMIN_CHAPTER_REQUEST,\r\n    LIST_ADMIN_CHAPTER_SUCCESS,\r\n    LIST_ADMIN_CHAPTER_ERROR,\r\n    UPDATE_STORY_REQUEST,\r\n    UPDATE_STORY_SUCCESS,\r\n    UPDATE_STORY_ERROR,\r\n\r\n} from '../Constant/StoryConstant'\r\nimport { backend } from '../../Connection/conn'\r\n\r\nconst token = localStorage.getItem('token') ? localStorage.getItem('token') : null;\r\n\r\nconst Authconfig = {\r\n    headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n    },\r\n    withCredentials: true,\r\n}\r\n\r\nconst config = {\r\n    headers: {\r\n        'Content-type': 'application/json',\r\n    }\r\n}\r\n\r\n\r\nexport const createStory = (fdata) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CREATE_STORY_REQUEST })\r\n\r\n        const { data } = await axios.post(`${backend}/api/story/create/`, fdata, Authconfig)\r\n\r\n        dispatch({\r\n            type: CREATE_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: CREATE_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listStory = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_STORY_REQUEST })\r\n        const token = localStorage.getItem('token') ? localStorage.getItem('token') : null;\r\n        const Authconfig = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                ...(token && { Authorization: `Bearer ${token}` }), \r\n            },\r\n            withCredentials: true,\r\n        }\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/list`, Authconfig)\r\n        dispatch({\r\n            type: LIST_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listStoryDetails = (storyid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: READ_STORY_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}`, config)\r\n        \r\n        dispatch({\r\n            type: READ_STORY_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: READ_STORY_DETAILS_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const createChapter = (storyid, fdata) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CREATE_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.post(`${backend}/api/story/${storyid}/chapter/create/`, fdata, Authconfig)\r\n        dispatch({\r\n            type: CREATE_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: CREATE_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listChapter = (storyid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}/chapter/list`, config)\r\n        dispatch({\r\n            type: LIST_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const readChapter = (storyid, chapterid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: READ_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}/chapter/${chapterid}`, config)\r\n        dispatch({\r\n            type: READ_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: READ_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listAdminStory = (page=1) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_ADMIN_STORY_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/admin/story/list${page ? `?page=${page}` : ''}`, Authconfig)\r\n        dispatch({\r\n            type: LIST_ADMIN_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_ADMIN_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listAdminChapter = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_ADMIN_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/admin/story/${id}/chapter/list`, Authconfig)\r\n        dispatch({\r\n            type: LIST_ADMIN_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_ADMIN_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateChapter = (storyid, chapterid, fdata) => async (dispatch) => {\r\n    try {\r\n        console.log(fdata)\r\n        dispatch({ type: UPDATE_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.put(`${backend}/api/story/${storyid}/chapter/${chapterid}/update`, fdata, Authconfig)\r\n        dispatch({\r\n            type: UPDATE_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: UPDATE_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateStory = (storyid, fdata) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: UPDATE_STORY_REQUEST })\r\n\r\n        const { data } = await axios.put(`${backend}/api/story/${storyid}/update`, fdata, Authconfig)\r\n        dispatch({\r\n            type: UPDATE_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: UPDATE_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\n//import AddComment from '../../Components/Layout/AddComment';\r\nimport Stars from '../../Components/Element/Stars';\r\nimport { readChapter } from '../../Redux/Action/StoryAction';\r\nimport { useSelector } from 'react-redux';\r\nimport Loader from '../../Components/Message/Loader';\r\nimport Message from '../../Components/Message/Message';\r\n\r\nconst ReadChapterScreen = ({ dispatch }) => {\r\n  const { chapterid, storyid } = useParams();\r\n\r\n  const ReadChapter = useSelector(state => state.readChapter)\r\n  const { loading,error,chapter,count } = ReadChapter\r\n\r\n  /*const LikeThisChapter = () => {\r\n    chapter.likes += 1;\r\n  }\r\n*/\r\n  useEffect(() => {\r\n    try {\r\n      dispatch(readChapter(storyid, chapterid))\r\n    } catch (err) {\r\n      alert(err)\r\n    }\r\n  },[chapterid,dispatch,storyid])\r\n  \r\n  if(loading) return <Loader/>;\r\n  if(error) return <Message>error</Message>;\r\n  if(!chapter._id) return null;\r\n\r\n  const paragraphs = chapter.chapter.split(/\\n+/).filter(p => p.trim() !== '');\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 p-6\">\r\n      <div className=\"max-w-3xl mx-auto bg-white shadow-lg rounded-lg p-6\">\r\n        {/* Chapter Header */}\r\n        <h1 className=\"text-3xl font-semibold text-blue-700 mb-4\">Read Chapter</h1>\r\n        <div className=\"flex justify-between items-center mb-8\">\r\n          <h2 className=\"text-xl font-medium\">Story Id: {storyid}</h2>\r\n          <h2 className=\"text-xl font-medium\">Chapter Id: {chapterid}</h2>\r\n        </div>\r\n\r\n        {/* Chapter Content */}\r\n        <section className=\"mb-8\">\r\n          <div className=\"flex flex-col md:flex-row items-center mb-6\">\r\n            <img src={chapter.cover} alt='' className=\"w-48 h-48 object-cover rounded-lg shadow-md\" />\r\n            <div className=\"mt-4 md:mt-0 md:ml-6\">\r\n              <h1 className=\"text-2xl font-bold text-gray-800\">{chapter.title || 'Untitled'}</h1>\r\n              <h2 className=\"text-lg text-gray-600\">{chapter.title}</h2>\r\n              <h2 className=\"text-lg text-gray-600\">{chapter.views} Views</h2>\r\n              <h2 className=\"text-lg text-gray-600\">{chapter.likes} Likes</h2>\r\n              <Stars rating={chapter.rating} count={chapter.numReviews} />\r\n\r\n              {/**\r\n             * \r\n               <h2 className=\"text-sm text-gray-600\">{chapter.likes} \r\n                <button onClick={LikeThisChapter}>Like</button>\r\n                 </h2>\r\n            */}\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"bg-gray-50 p-4 rounded-lg shadow-inner\">\r\n            {paragraphs.map((para, index) => (\r\n              <p\r\n                key={index}\r\n                className=\"mb-4 text-justify whitespace-pre-wrap text-gray-700 text-lg leading-relaxed \"\r\n                style={{ textIndent: '2em', marginBottom: '1.5em' }} // Indent first line and add space after each paragraph\r\n              >\r\n                {para}\r\n              </p>\r\n            ))}\r\n            <p>****</p>\r\n\r\n          </div>\r\n        </section>\r\n\r\n        {/* Navigation Links */}\r\n        <div className=\"flex justify-between mb-6\">\r\n          {chapterid > 1 && (\r\n            <Link\r\n              to={`/story/${storyid}/chapter/${chapterid - 1}`}\r\n              className=\"text-blue-500 hover:text-blue-700 font-semibold\"\r\n            >\r\n              Previous\r\n            </Link>\r\n          )}\r\n          {count > parseInt(chapterid) && (\r\n            <Link\r\n              to={`/story/${storyid}/chapter/${parseInt(chapter._id) + 1}`}\r\n              className=\"text-blue-500 hover:text-blue-700 font-semibold\"\r\n            >\r\n              Next\r\n            </Link>\r\n          )}\r\n        </div>\r\n\r\n        {/* Comment Section \r\n        <div className=\"mt-6\">\r\n          <AddComment type=\"chapter\" id={chapterid} />\r\n        </div>\r\n          */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReadChapterScreen;"],"names":["_ref","rating","count","_jsxs","className","children","Array","map","_","index","_jsx","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","d","Children","token","localStorage","getItem","Authconfig","headers","Authorization","concat","withCredentials","config","createStory","fdata","async","dispatch","type","CREATE_STORY_REQUEST","data","axios","post","backend","CREATE_STORY_SUCCESS","payload","err","CREATE_STORY_ERROR","listStory","LIST_STORY_REQUEST","get","LIST_STORY_SUCCESS","LIST_STORY_ERROR","listStoryDetails","storyid","READ_STORY_DETAILS_REQUEST","READ_STORY_DETAILS_SUCCESS","READ_STORY_DETAILS_ERROR","createChapter","CREATE_CHAPTER_REQUEST","CREATE_CHAPTER_SUCCESS","CREATE_CHAPTER_ERROR","listChapter","LIST_CHAPTER_REQUEST","LIST_CHAPTER_SUCCESS","LIST_CHAPTER_ERROR","readChapter","chapterid","READ_CHAPTER_REQUEST","READ_CHAPTER_SUCCESS","READ_CHAPTER_ERROR","listAdminStory","page","arguments","length","undefined","LIST_ADMIN_STORY_REQUEST","LIST_ADMIN_STORY_SUCCESS","LIST_ADMIN_STORY_ERROR","listAdminChapter","id","LIST_ADMIN_CHAPTER_REQUEST","LIST_ADMIN_CHAPTER_SUCCESS","LIST_ADMIN_CHAPTER_ERROR","updateChapter","console","log","UPDATE_CHAPTER_REQUEST","put","UPDATE_CHAPTER_SUCCESS","UPDATE_CHAPTER_ERROR","updateStory","UPDATE_STORY_REQUEST","UPDATE_STORY_SUCCESS","UPDATE_STORY_ERROR","useParams","ReadChapter","useSelector","state","loading","error","chapter","useEffect","alert","Loader","Message","_id","paragraphs","split","filter","p","trim","src","cover","alt","title","views","likes","Stars","numReviews","para","style","textIndent","marginBottom","Link","to","parseInt"],"sourceRoot":""}