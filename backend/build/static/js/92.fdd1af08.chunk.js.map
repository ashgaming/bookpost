{"version":3,"file":"static/js/92.fdd1af08.chunk.js","mappings":"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","sources":["Components/Element/Stars.jsx","Components/Book/BookCover.jsx","Components/Layout/ListBook.jsx","Components/Message/Message.js","Helper/ImageUrlCorrect.js","Redux/Action/StoryAction.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst Stars = ({rating,count}) => {\r\n    return (\r\n        <span className=\"flex items-center\">\r\n            {[...Array(5)].map((_, index) => (\r\n                <svg\r\n                    key={index}\r\n                    fill={rating >= index + 1 ? 'currentColor' : 'none'}\r\n                    stroke=\"currentColor\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    className=\"w-4 h-4 text-red-500\"\r\n                    viewBox=\"0 0 24 24\"\r\n                >\r\n                    <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\" />\r\n                </svg>\r\n            ))}\r\n            <span className=\"text-gray-600 ml-3\">{count} Reviews</span>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Stars\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { handleImageError } from '../../Helper/ImageUrlCorrect';\r\nimport Stars from '../Element/Stars';\r\n\r\nexport const BookCover = ({ Book }) => {\r\n  if (!Book) return null;\r\n\r\n  return (\r\n    <Link\r\n      to={`/book/${Book._id}`}\r\n      className=\"max-w-sm mx-auto relative shadow-md rounded-lg cursor-pointer overflow-hidden transition-transform duration-300 hover:scale-105\"\r\n    >\r\n      <div className=\"w-72 bg-white shadow-md rounded-xl duration-500 hover:scale-105 hover:shadow-xl\">\r\n\r\n        <img\r\n          src={Book.cover}\r\n          alt=\"Product\" class=\"h-80 w-72 object-cover rounded-t-xl\"\r\n          onError={(e) => handleImageError(e)} />\r\n        <div class=\"px-4 py-3 w-72\">\r\n          <span class=\"text-gray-400 mr-3 uppercase text-xs\">Novel</span>\r\n          <p class=\"text-lg font-bold text-black truncate block capitalize\">{Book.name}</p>\r\n          <div class=\"flex items-center\">\r\n            <p class=\"text-lg font-semibold text-black cursor-auto my-3\"><Stars rating={Book.rating} count={Book.count} /></p>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </Link>\r\n\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { BookCover } from '../Book/BookCover'\r\nimport { listStory } from '../../Redux/Action/StoryAction'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../Message/Loader'\r\nimport Message from '../Message/Message'\r\n\r\nconst ListBook = () => {\r\n    const dispatch = useDispatch()\r\n    const listStoryy = useSelector(state => state.listStory)\r\n    const { loading, error, Books } = listStoryy\r\n\r\n    useEffect(() => {\r\n        if (Books === undefined) {\r\n            dispatch(listStory());\r\n        }\r\n    }, [Books])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div id='BookList' className=\"container mx-auto py-8 bg-webb\"> {/* Added margin to separate elements */}\r\n                <h1 className=\"m-1 p-5 text-5xl\">My Book Collection</h1>\r\n            </div>\r\n            <div className=\"container mx-auto p-4 lg:h-auto flex items-center justify-center bg-webb\">\r\n            {loading && <Loader />}\r\n            {error && <Message>{error}</Message>}\r\n                {Books?.length <= 0 && <h1>{`No books available ...!`}</h1>}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\r\n                    {\r\n                        Books && Books.map((book, index) => (<BookCover Book={book} key={index} /> ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListBook\r\n","import React from 'react'\r\n\r\nconst Message = ({children}) => {\r\n  return (\r\n    <div>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message\r\n"," const CorrectUrl = async(url) =>\r\n{\r\n    const con = 'http://127.0.0.1:8000/'\r\n    url = url.slice(32)\r\n    const image = con + url;\r\n    return image;\r\n}\r\n\r\nexport const handleImageError = (e) => {\r\n    e.target.src = 'https://tse1.mm.bing.net/th?id=OIP.rTGLpwoN4zkMisuka5heyQHaHY&pid=Api&P=0&h=180'; // Set your fallback image here\r\n  };","import axios from 'axios'\r\nimport {\r\n    CREATE_STORY_REQUEST,\r\n    CREATE_STORY_SUCCESS,\r\n    CREATE_STORY_ERROR,\r\n\r\n    CREATE_CHAPTER_REQUEST,\r\n    CREATE_CHAPTER_SUCCESS,\r\n    CREATE_CHAPTER_ERROR,\r\n\r\n    LIST_STORY_REQUEST,\r\n    LIST_STORY_SUCCESS,\r\n    LIST_STORY_ERROR,\r\n\r\n    READ_CHAPTER_REQUEST,\r\n    READ_CHAPTER_SUCCESS,\r\n    READ_CHAPTER_ERROR,\r\n\r\n    READ_STORY_DETAILS_REQUEST,\r\n    READ_STORY_DETAILS_SUCCESS,\r\n    READ_STORY_DETAILS_ERROR,\r\n\r\n    LIST_CHAPTER_REQUEST,\r\n    LIST_CHAPTER_SUCCESS,\r\n    LIST_CHAPTER_ERROR,\r\n\r\n    UPDATE_CHAPTER_REQUEST,\r\n    UPDATE_CHAPTER_SUCCESS,\r\n    UPDATE_CHAPTER_ERROR,\r\n\r\n    LIST_ADMIN_STORY_REQUEST,\r\n    LIST_ADMIN_STORY_SUCCESS,\r\n    LIST_ADMIN_STORY_ERROR,\r\n\r\n    LIST_ADMIN_CHAPTER_REQUEST,\r\n    LIST_ADMIN_CHAPTER_SUCCESS,\r\n    LIST_ADMIN_CHAPTER_ERROR,\r\n    UPDATE_STORY_REQUEST,\r\n    UPDATE_STORY_SUCCESS,\r\n    UPDATE_STORY_ERROR,\r\n\r\n} from '../Constant/StoryConstant'\r\nimport { backend } from '../../Connection/conn'\r\n\r\nconst token = localStorage.getItem('token') ? localStorage.getItem('token') : null;\r\n\r\nconst Authconfig = {\r\n    headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n    },\r\n    withCredentials: true,\r\n}\r\n\r\nconst config = {\r\n    headers: {\r\n        'Content-type': 'application/json',\r\n    }\r\n}\r\n\r\n\r\nexport const createStory = (fdata) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CREATE_STORY_REQUEST })\r\n\r\n        const { data } = await axios.post(`${backend}/api/story/create/`, fdata, Authconfig)\r\n\r\n        dispatch({\r\n            type: CREATE_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: CREATE_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listStory = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_STORY_REQUEST })\r\n        const token = localStorage.getItem('token') ? localStorage.getItem('token') : null;\r\n        const Authconfig = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                ...(token && { Authorization: `Bearer ${token}` }), \r\n            },\r\n            withCredentials: true,\r\n        }\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/list`, Authconfig)\r\n        dispatch({\r\n            type: LIST_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listStoryDetails = (storyid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: READ_STORY_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}`, config)\r\n        \r\n        dispatch({\r\n            type: READ_STORY_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: READ_STORY_DETAILS_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const createChapter = (storyid, fdata) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CREATE_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.post(`${backend}/api/story/${storyid}/chapter/create/`, fdata, Authconfig)\r\n        dispatch({\r\n            type: CREATE_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: CREATE_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listChapter = (storyid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}/chapter/list`, config)\r\n        dispatch({\r\n            type: LIST_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const readChapter = (storyid, chapterid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: READ_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}/chapter/${chapterid}`, config)\r\n        dispatch({\r\n            type: READ_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: READ_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listAdminStory = (page=1) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_ADMIN_STORY_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/admin/story/list${page ? `?page=${page}` : ''}`, Authconfig)\r\n        dispatch({\r\n            type: LIST_ADMIN_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_ADMIN_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listAdminChapter = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_ADMIN_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/admin/story/${id}/chapter/list`, Authconfig)\r\n        dispatch({\r\n            type: LIST_ADMIN_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_ADMIN_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateChapter = (storyid, chapterid, fdata) => async (dispatch) => {\r\n    try {\r\n        console.log(fdata)\r\n        dispatch({ type: UPDATE_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.put(`${backend}/api/story/${storyid}/chapter/${chapterid}/update`, fdata, Authconfig)\r\n        dispatch({\r\n            type: UPDATE_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: UPDATE_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateStory = (storyid, fdata) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: UPDATE_STORY_REQUEST })\r\n\r\n        const { data } = await axios.put(`${backend}/api/story/${storyid}/update`, fdata, Authconfig)\r\n        dispatch({\r\n            type: UPDATE_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: UPDATE_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}"],"names":["_ref","rating","count","_jsxs","className","children","Array","map","_","index","_jsx","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","d","BookCover","Book","Link","to","concat","_id","src","cover","alt","class","onError","e","handleImageError","name","Stars","ListBook","dispatch","useDispatch","listStoryy","useSelector","state","listStory","loading","error","Books","useEffect","undefined","_Fragment","id","Loader","Message","length","book","target","token","localStorage","getItem","Authconfig","headers","Authorization","withCredentials","config","createStory","fdata","async","type","CREATE_STORY_REQUEST","data","axios","post","backend","CREATE_STORY_SUCCESS","payload","err","CREATE_STORY_ERROR","LIST_STORY_REQUEST","get","LIST_STORY_SUCCESS","LIST_STORY_ERROR","listStoryDetails","storyid","READ_STORY_DETAILS_REQUEST","READ_STORY_DETAILS_SUCCESS","READ_STORY_DETAILS_ERROR","createChapter","CREATE_CHAPTER_REQUEST","CREATE_CHAPTER_SUCCESS","CREATE_CHAPTER_ERROR","listChapter","LIST_CHAPTER_REQUEST","LIST_CHAPTER_SUCCESS","LIST_CHAPTER_ERROR","readChapter","chapterid","READ_CHAPTER_REQUEST","READ_CHAPTER_SUCCESS","READ_CHAPTER_ERROR","listAdminStory","page","arguments","LIST_ADMIN_STORY_REQUEST","LIST_ADMIN_STORY_SUCCESS","LIST_ADMIN_STORY_ERROR","listAdminChapter","LIST_ADMIN_CHAPTER_REQUEST","LIST_ADMIN_CHAPTER_SUCCESS","LIST_ADMIN_CHAPTER_ERROR","updateChapter","console","log","UPDATE_CHAPTER_REQUEST","put","UPDATE_CHAPTER_SUCCESS","UPDATE_CHAPTER_ERROR","updateStory","UPDATE_STORY_REQUEST","UPDATE_STORY_SUCCESS","UPDATE_STORY_ERROR"],"sourceRoot":""}