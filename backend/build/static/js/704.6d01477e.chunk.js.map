{"version":3,"file":"static/js/704.6d01477e.chunk.js","mappings":"mNASA,MAsEA,EAtEoBA,KAChB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,CAAC,IAC3BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,IAC7BK,GAAeC,EAAAA,EAAAA,SAAO,GAyB5B,OAvBAC,EAAAA,EAAAA,YAAU,KAgBFC,eAAeC,QAAQ,WACvBV,EAAQW,KAAKC,MAAMH,eAAeC,QAAQ,aAhB3BG,WACf,IAAKP,EAAaQ,QAAS,CACvBX,GAAW,GACX,IACI,MAAM,KAAEY,SAAeC,EAAAA,EAAMC,IAAI,GAADC,OAAIC,EAAAA,EAAO,qBAC3CnB,EAAQe,GACRN,eAAeW,QAAQ,UAAWT,KAAKU,UAAUN,IACjDT,EAAaQ,SAAU,CAC3B,CAAE,MAAOV,GACLC,EAASD,EAAMkB,SAAW,wBAC9B,CAAC,QACGnB,GAAW,EACf,CACJ,GAKAoB,EACJ,GACD,KAGCC,EAAAA,EAAAA,KAAA,WAAAC,SAEKvB,GAAUsB,EAAAA,EAAAA,KAACE,EAAAA,EAAM,IACdtB,GACIoB,EAAAA,EAAAA,KAACG,EAAAA,EAAO,CAAAF,SAAErB,KAEVoB,EAAAA,EAAAA,KAAA,OAAKI,UAAU,sEAAqEH,UAChFI,EAAAA,EAAAA,MAAA,OAAKD,UAAU,kDAAiDH,SAAA,EAC5DD,EAAAA,EAAAA,KAAA,OAAKI,UAAU,mGAAkGH,UAC7GD,EAAAA,EAAAA,KAAA,OACIM,IAAI,GACJC,IAAKhC,EAAKiC,MACVC,QAAUC,IAAMC,EAAAA,EAAAA,GAAiBD,GACjCN,UAAU,uDAKlBC,EAAAA,EAAAA,MAAA,OAAKD,UAAU,WAAUH,SAAA,EACrBD,EAAAA,EAAAA,KAAA,MAAII,UAAU,iCAAgCH,SAAE1B,EAAKqC,QACrDZ,EAAAA,EAAAA,KAAA,MAAII,UAAU,iCAAgCH,SAAE1B,EAAKsC,YAErDb,EAAAA,EAAAA,KAAA,KAAGI,UAAU,qBAAoBH,SAC5B1B,EAAKuC,WAGVd,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CACDC,GAAE,SAAAtB,OAAWnB,EAAK0C,KAClBb,UAAU,uKAAsKH,SACnL,iCAOf,C,wDCzElB,MAQA,EARgBiB,IAAiB,IAAhB,SAACC,GAASD,EACzB,OACElB,EAAAA,EAAAA,KAAA,OAAAC,SACGkB,GACG,C,kCCNT,MAQYR,EAAoBD,IAC7BA,EAAEU,OAAOb,IAAM,iFAAiF,C","sources":["Components/Layout/MostPopular.jsx","Components/Message/Message.js","Helper/ImageUrlCorrect.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { backend } from '../../Connection/conn';\r\nimport Message from '../Message/Message';\r\nimport Loader from '../Message/Loader';\r\nimport { Link } from 'react-router-dom';\r\nimport { handleImageError } from '../../Helper/ImageUrlCorrect';\r\n\r\n\r\nconst MostPopular = () => {\r\n    const [book, setBook] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const hasLoadedRef = useRef(false); // Ref to track if data has already been loaded\r\n\r\n    useEffect(() => {\r\n        const fetchBooks = async () => {\r\n            if (!hasLoadedRef.current) { // Check if data has been loaded\r\n                setLoading(true);\r\n                try {\r\n                    const { data } = await axios.get(`${backend}/api/mostpopular`);\r\n                    setBook(data);\r\n                    sessionStorage.setItem('popbook', JSON.stringify(data));\r\n                    hasLoadedRef.current = true; // Mark as loaded\r\n                } catch (error) {\r\n                    setError(error.message || 'Failed to fetch books');\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        };\r\n        if (sessionStorage.getItem('popbook')) {\r\n            setBook(JSON.parse(sessionStorage.getItem('popbook')));\r\n        } else {\r\n            fetchBooks();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <section>\r\n\r\n            {loading ? <Loader /> :\r\n                error ? (\r\n                    <Message>{error}</Message>\r\n                ) : (\r\n                    <div className=\"mx-auto max-w-screen-xl px-4 py-8 sm:px-6 sm:py-12 lg:px-8 lg:py-16\">\r\n                        <div className=\"grid grid-cols-1 gap-8 lg:grid-cols-2 lg:gap-16\">\r\n                            <div className=\"flex items-center justify-center flex-1 relative w-full overflow-hidden rounded-lg lg:order-last\">\r\n                                <img\r\n                                    alt=\"\"\r\n                                    src={book.cover}\r\n                                    onError={(e) => handleImageError(e)}\r\n                                    className=\"w-[250px] h-[400px] m-5 object-cover rounded-lg\"\r\n                                />\r\n                            </div>\r\n\r\n\r\n                            <div className=\"lg:py-24\">\r\n                                <h2 className=\"text-3xl font-bold sm:text-4xl\">{book.name}</h2>\r\n                                <h2 className=\"text-2xl font-bold sm:text-3xl\">{book.category}</h2>\r\n\r\n                                <p className=\"mt-4 text-gray-600\">\r\n                                    {book.summary}\r\n                                </p>\r\n\r\n                                <Link\r\n                                    to={`/book/${book._id}`}\r\n                                    className=\"mt-8 inline-block rounded bg-indigo-600 px-12 py-3 text-sm font-medium text-white transition hover:bg-indigo-700 focus:outline-none focus:ring focus:ring-yellow-400\"\r\n                                >\r\n                                    Get Started Reading\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default MostPopular;\r\n","import React from 'react'\r\n\r\nconst Message = ({Children}) => {\r\n  return (\r\n    <div>\r\n      {Children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message\r\n"," const CorrectUrl = async(url) =>\r\n{\r\n    const con = 'http://127.0.0.1:8000/'\r\n    url = url.slice(32)\r\n    const image = con + url;\r\n    return image;\r\n}\r\n\r\nexport const handleImageError = (e) => {\r\n    e.target.src = 'https://tse1.mm.bing.net/th?id=OIP.rTGLpwoN4zkMisuka5heyQHaHY&pid=Api&P=0&h=180'; // Set your fallback image here\r\n  };"],"names":["MostPopular","book","setBook","useState","loading","setLoading","error","setError","hasLoadedRef","useRef","useEffect","sessionStorage","getItem","JSON","parse","async","current","data","axios","get","concat","backend","setItem","stringify","message","fetchBooks","_jsx","children","Loader","Message","className","_jsxs","alt","src","cover","onError","e","handleImageError","name","category","summary","Link","to","_id","_ref","Children","target"],"sourceRoot":""}