{"version":3,"file":"static/js/868.4f300858.chunk.js","mappings":"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","sources":["Components/Element/BackButton.jsx","Components/Message/Message.js","Redux/Action/StoryAction.js","Components/Element/DeleteButton.jsx","Screen/AddStoryScreen/ListStoriesScreen.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst BackButton = ({url}) => {\r\n    const navigate = useNavigate();\r\n    const handleClick = () => {\r\n        navigate(url);\r\n    };\r\n    return (\r\n        <div className=\"w-full flex justify-start my-5\">\r\n            <button\r\n                className=\"bg-customOrange text-white py-2 px-4 rounded hover:bg-hoverOrange transition-colors duration-200\"\r\n                onClick={handleClick}\r\n            >\r\n                Go Back\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BackButton\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst Message = ({children}) => {\r\n  return (\r\n    <div>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios'\r\nimport {\r\n    CREATE_STORY_REQUEST,\r\n    CREATE_STORY_SUCCESS,\r\n    CREATE_STORY_ERROR,\r\n\r\n    CREATE_CHAPTER_REQUEST,\r\n    CREATE_CHAPTER_SUCCESS,\r\n    CREATE_CHAPTER_ERROR,\r\n\r\n    LIST_STORY_REQUEST,\r\n    LIST_STORY_SUCCESS,\r\n    LIST_STORY_ERROR,\r\n\r\n    READ_CHAPTER_REQUEST,\r\n    READ_CHAPTER_SUCCESS,\r\n    READ_CHAPTER_ERROR,\r\n\r\n    READ_STORY_DETAILS_REQUEST,\r\n    READ_STORY_DETAILS_SUCCESS,\r\n    READ_STORY_DETAILS_ERROR,\r\n\r\n    LIST_CHAPTER_REQUEST,\r\n    LIST_CHAPTER_SUCCESS,\r\n    LIST_CHAPTER_ERROR,\r\n\r\n    UPDATE_CHAPTER_REQUEST,\r\n    UPDATE_CHAPTER_SUCCESS,\r\n    UPDATE_CHAPTER_ERROR,\r\n\r\n    LIST_ADMIN_STORY_REQUEST,\r\n    LIST_ADMIN_STORY_SUCCESS,\r\n    LIST_ADMIN_STORY_ERROR,\r\n\r\n    LIST_ADMIN_CHAPTER_REQUEST,\r\n    LIST_ADMIN_CHAPTER_SUCCESS,\r\n    LIST_ADMIN_CHAPTER_ERROR,\r\n\r\n    UPDATE_STORY_REQUEST,\r\n    UPDATE_STORY_SUCCESS,\r\n    UPDATE_STORY_ERROR,\r\n\r\n    CREATE_COMMENT_REQUEST,\r\n    CREATE_COMMENT_SUCCESS,\r\n    CREATE_COMMENT_ERROR,\r\n\r\n    GET_COMMENT_REQUEST,\r\n    GET_COMMENT_SUCCESS,\r\n    GET_COMMENT_ERROR,\r\n\r\n\r\n\r\n} from '../Constant/StoryConstant'\r\nimport { backend } from '../../Connection/conn'\r\n\r\nconst token = localStorage.getItem('token') ? localStorage.getItem('token') : null;\r\n\r\nexport const Authconfig = {\r\n    headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n    },\r\n    withCredentials: true,\r\n}\r\n\r\nexport const config = {\r\n    headers: {\r\n        'Content-type': 'application/json',\r\n    }\r\n}\r\n\r\n\r\nexport const createStory = (fdata) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CREATE_STORY_REQUEST })\r\n\r\n        const { data } = await axios.post(`${backend}/api/story/create/`, fdata, Authconfig)\r\n\r\n        dispatch({\r\n            type: CREATE_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: CREATE_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listStory = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_STORY_REQUEST })\r\n        const token = localStorage.getItem('token') ? localStorage.getItem('token') : null;\r\n        const Authconfig = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                ...(token && { Authorization: `Bearer ${token}` }), \r\n            },\r\n            withCredentials: true,\r\n        }\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/list`, Authconfig)\r\n        dispatch({\r\n            type: LIST_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listStoryDetails = (storyid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: READ_STORY_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}`, config)\r\n        \r\n        dispatch({\r\n            type: READ_STORY_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: READ_STORY_DETAILS_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const createChapter = (storyid, fdata) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CREATE_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.post(`${backend}/api/story/${storyid}/chapter/create/`, fdata, Authconfig)\r\n        dispatch({\r\n            type: CREATE_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: CREATE_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listChapter = (storyid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}/chapter/list`, config)\r\n        dispatch({\r\n            type: LIST_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const readChapter = (storyid, chapterid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: READ_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}/chapter/${chapterid}`, config)\r\n        dispatch({\r\n            type: READ_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: READ_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listAdminStory = (page=1) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_ADMIN_STORY_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/admin/story/list${page ? `?page=${page}` : ''}`, Authconfig)\r\n        dispatch({\r\n            type: LIST_ADMIN_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_ADMIN_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listAdminChapter = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_ADMIN_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/admin/story/${id}/chapter/list`, Authconfig)\r\n        dispatch({\r\n            type: LIST_ADMIN_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_ADMIN_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateChapter = (storyid, chapterid, fdata) => async (dispatch) => {\r\n    try {\r\n        console.log(fdata)\r\n        dispatch({ type: UPDATE_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.put(`${backend}/api/story/${storyid}/chapter/${chapterid}/update`, fdata, Authconfig)\r\n        dispatch({\r\n            type: UPDATE_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: UPDATE_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateStory = (storyid, fdata) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: UPDATE_STORY_REQUEST })\r\n\r\n        const { data } = await axios.put(`${backend}/api/story/${storyid}/update`, fdata, Authconfig)\r\n        dispatch({\r\n            type: UPDATE_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: UPDATE_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createComment = (fdata) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CREATE_COMMENT_REQUEST })\r\n\r\n        const { data } = await axios.post(`${backend}/api/story/${fdata.storyid}/comment/create`, fdata, Authconfig)\r\n        dispatch({\r\n            type: CREATE_COMMENT_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: CREATE_COMMENT_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listComment = (storyid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: GET_COMMENT_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}/comment/list`, config)\r\n        dispatch({\r\n            type: GET_COMMENT_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: GET_COMMENT_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}","import React from 'react';\r\n\r\nconst DeleteButton = ({action}) => {\r\n  return (\r\n    <button onClick={()=>action} className=\"w-12 h-12 rounded-full bg-gray-900 flex items-center justify-center shadow-lg cursor-pointer relative overflow-hidden transition-all duration-300 ease-in-out hover:w-36 hover:rounded-[50px] hover:bg-red-500 active:scale-95\">\r\n      <svg viewBox=\"0 0 448 512\" className=\"w-3 transition-all duration-300 ease-in-out hover:w-12 transform hover:translate-y-2/3\">\r\n        <path\r\n          d=\"M135.2 17.7L128 32H32C14.3 32 0 46.3 0 64S14.3 96 32 96H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H320l-7.2-14.3C307.4 6.8 296.3 0 284.2 0H163.8c-12.1 0-23.2 6.8-28.6 17.7zM416 128H32L53.2 467c1.6 25.3 22.6 45 47.9 45H346.9c25.3 0 46.3-19.7 47.9-45L416 128z\"\r\n          fill=\"white\"\r\n        />\r\n      </svg>\r\n      <span className=\"absolute top-[-20px] text-white text-xs opacity-0 transition-all duration-300 ease-in-out hover:text-base hover:opacity-100 hover:translate-y-7\">\r\n        Delete\r\n      </span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default DeleteButton;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { listAdminStory } from \"../../Redux/Action/StoryAction\";\r\nimport { useSelector } from \"react-redux\";\r\nimport BackButton from \"../../Components/Element/BackButton\";\r\nimport Loader from \"../../Components/Message/Loader\";\r\nimport Message from \"../../Components/Message/Message\";\r\nimport DeleteButton from \"../../Components/Element/DeleteButton\";\r\n\r\nconst ListStoriesScreen = ({ dispatch }) => {\r\n    const adminstory = useSelector(state => state.listAdminStory)\r\n    const {\r\n        loading,\r\n        error,\r\n        story,\r\n        page,\r\n        pages\r\n\r\n    } = adminstory\r\n\r\n    useEffect(() => {\r\n        dispatch(listAdminStory(page));\r\n    }, [dispatch])\r\n\r\n    const navigate = useNavigate()\r\n    const thlist = [\r\n        'name',\r\n        'category',\r\n        'Created At',\r\n        'Story ID',\r\n        'Action',\r\n    ]\r\n\r\n    const PressHandler = (e, id) => {\r\n        e.preventDefault();\r\n        navigate(`/add/story/${id}`,);\r\n    }\r\n    if (loading) return <Loader />;\r\n    if (error) return <Message>{error}</Message>;\r\n    if (!story) return null;\r\n    return (\r\n        <div className=\"bg-white p-8 rounded-md w-full\">\r\n            <BackButton url={`/story-option`} />\r\n            <div className=\"flex items-center justify-between pb-6\">\r\n                <div>\r\n                    <h2 className=\"text-gray-600 font-semibold\">Select Story</h2>\r\n                    <span className=\"text-xs\">All stories item</span>\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex bg-gray-50 items-center p-2 rounded-md\">\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            className=\"h-5 w-5 text-gray-400\"\r\n                            viewBox=\"0 0 20 20\"\r\n                            fill=\"currentColor\"\r\n                        >\r\n                            <path\r\n                                fillRule=\"evenodd\"\r\n                                d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\r\n                                clipRule=\"evenodd\"\r\n                            />\r\n                        </svg>\r\n                        <input\r\n                            className=\"bg-gray-50 outline-none ml-1 block\"\r\n                            type=\"text\"\r\n                            placeholder=\"search...\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"lg:ml-40 ml-10 space-x-8\">\r\n                        <Link\r\n                            to='/create-story'\r\n                            className=\"bg-indigo-600 px-4 py-2 rounded-md text-white font-semibold tracking-wide cursor-pointer\">\r\n                            Create\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\r\n                    <div className=\"inline-block min-w-full shadow rounded-lg overflow-hidden\">\r\n                        <table className=\"min-w-full leading-normal\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {\r\n                                        thlist.map((thh, index) => (\r\n                                            <th key={index} className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-xs font-semibold text-gray-600 uppercase tracking-wider text-center\">\r\n                                                {thh}\r\n                                            </th>\r\n                                        ))\r\n                                    }\r\n\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    story.map((item, index) => (\r\n                                        <tr className='bg-slate-50 hover:bg-yellow-200' key={index}>\r\n\r\n                                            <td className=\"px-5 py-5 border-b border-gray-200 text-sm\" onClick={e => PressHandler(e, item._id)}>\r\n                                                <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                    {item.name}\r\n                                                </p>\r\n                                            </td>\r\n                                            <td className=\"px-5 py-5 border-b border-gray-200 text-sm\" onClick={e => PressHandler(e, item._id)}>\r\n                                                <p className=\"text-gray-900 whitespace-no-wrap\">{item.category}</p>\r\n                                            </td>\r\n                                            <td className=\"px-5 py-5 border-b border-gray-200  text-sm\" onClick={e => PressHandler(e, item._id)}>\r\n                                                <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                    {new Date(item.createdAt).toLocaleDateString()}\r\n                                                </p>\r\n                                            </td>\r\n                                            <td className=\"px-5 py-5 border-b border-gray-200  text-sm\" onClick={e => PressHandler(e, item._id)}>\r\n                                                <p className=\"text-gray-900 whitespace-no-wrap\">{item._id}</p>\r\n                                            </td>\r\n                                            <td className=\"px-5 py-5 border-b border-gray-200  text-sm\">\r\n                                                <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\r\n                                                    <span\r\n                                                        aria-hidden\r\n                                                        className=\"absolute inset-0 bg-green-200 opacity-50 rounded-full\"\r\n                                                    ></span>\r\n                                                    <span className=\"relative\">\r\n\r\n                                                        <button onClick={e => navigate(`/edit-story/${item._id}`)} className=\"rounded-md\">\r\n                                                            Edit\r\n                                                        </button>\r\n\r\n                                                    </span>\r\n                                                </span>\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"px-5 py-5 bg-white border-t flex flex-col xs:flex-row items-center xs:justify-between\">\r\n                            <span className=\"text-xs xs:text-sm text-gray-900\">\r\n                                Showing 1 to 4 of 50 Entries\r\n                            </span>\r\n                            <div className=\"inline-flex mt-2 xs:mt-0\">\r\n                                <button className=\"text-sm text-indigo-50 transition duration-150 hover:bg-indigo-500 bg-indigo-600 font-semibold py-2 px-4 rounded-l\">\r\n                                    Prev\r\n                                </button>\r\n                                &nbsp; &nbsp;\r\n                                <button className=\"text-sm text-indigo-50 transition duration-150 hover:bg-indigo-500 bg-indigo-600 font-semibold py-2 px-4 rounded-r\">\r\n                                    Next\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListStoriesScreen;\r\n"],"names":["_ref","url","navigate","useNavigate","_jsx","className","children","onClick","handleClick","token","localStorage","getItem","Authconfig","headers","Authorization","concat","withCredentials","config","createStory","fdata","async","dispatch","type","CREATE_STORY_REQUEST","data","axios","post","backend","CREATE_STORY_SUCCESS","payload","err","CREATE_STORY_ERROR","listStory","LIST_STORY_REQUEST","get","LIST_STORY_SUCCESS","LIST_STORY_ERROR","listStoryDetails","storyid","READ_STORY_DETAILS_REQUEST","READ_STORY_DETAILS_SUCCESS","READ_STORY_DETAILS_ERROR","createChapter","CREATE_CHAPTER_REQUEST","CREATE_CHAPTER_SUCCESS","CREATE_CHAPTER_ERROR","listChapter","LIST_CHAPTER_REQUEST","LIST_CHAPTER_SUCCESS","LIST_CHAPTER_ERROR","readChapter","chapterid","READ_CHAPTER_REQUEST","READ_CHAPTER_SUCCESS","READ_CHAPTER_ERROR","listAdminStory","page","arguments","length","undefined","LIST_ADMIN_STORY_REQUEST","LIST_ADMIN_STORY_SUCCESS","LIST_ADMIN_STORY_ERROR","listAdminChapter","id","LIST_ADMIN_CHAPTER_REQUEST","LIST_ADMIN_CHAPTER_SUCCESS","LIST_ADMIN_CHAPTER_ERROR","updateChapter","console","log","UPDATE_CHAPTER_REQUEST","put","UPDATE_CHAPTER_SUCCESS","UPDATE_CHAPTER_ERROR","updateStory","UPDATE_STORY_REQUEST","UPDATE_STORY_SUCCESS","UPDATE_STORY_ERROR","createComment","CREATE_COMMENT_REQUEST","CREATE_COMMENT_SUCCESS","CREATE_COMMENT_ERROR","listComment","GET_COMMENT_REQUEST","GET_COMMENT_SUCCESS","GET_COMMENT_ERROR","adminstory","useSelector","state","loading","error","story","pages","useEffect","PressHandler","e","preventDefault","Loader","Message","_jsxs","BackButton","xmlns","viewBox","fill","fillRule","d","clipRule","placeholder","Link","to","map","thh","index","item","_id","name","category","Date","createdAt","toLocaleDateString"],"sourceRoot":""}