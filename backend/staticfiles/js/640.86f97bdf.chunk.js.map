{"version":3,"file":"static/js/640.86f97bdf.chunk.js","mappings":"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","sources":["Components/Element/BackButton.jsx","Components/Message/LoaderModel.jsx","Components/Message/Message.js","Helper/StoryHelp.js","Redux/Action/StoryAction.js","Screen/AddStoryScreen/EditStoryScreen.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst BackButton = ({url}) => {\r\n    const navigate = useNavigate();\r\n    const handleClick = () => {\r\n        navigate(url);\r\n    };\r\n    return (\r\n        <div className=\"w-full flex justify-start my-5\">\r\n            <button\r\n                className=\"bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-700 transition-colors duration-200\"\r\n                onClick={handleClick}\r\n            >\r\n                Go Back\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BackButton\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst LoaderModel = () => {\r\n  return (\r\n    <div className=\"fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-75 z-50\">\r\n      <div className=\"text-center\">\r\n        <div className=\"loader ease-linear rounded-full border-8 border-t-8 border-gray-200 h-32 w-32 mb-4\"></div>\r\n        <h2 className=\"text-white text-xl font-semibold\">Loading...</h2>\r\n        <p className=\"text-white text-sm mt-2\">Please wait</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderModel;\r\n","import React from 'react'\r\n\r\nconst Message = ({Children}) => {\r\n  return (\r\n    <div>\r\n      {Children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message\r\n","import axios from 'axios';\r\nimport { backend } from '../Connection/conn';\r\n\r\n\r\nexport const UploadImage = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n\r\n\r\n    const token = localStorage.getItem('token');\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n        withCredentials: true,\r\n    };\r\n    \r\n\r\n    try {\r\n        const response = await axios.post(`${backend}/api/upload-image/`, formData, config);\r\n\r\n        if (response.status === 200) {\r\n            const uploadedImageUrl = `${backend}` + response.data.image_url;\r\n            alert('Image uploaded successfully');\r\n            return uploadedImageUrl;\r\n        } else {\r\n            alert('Failed to upload image');\r\n        }\r\n    } catch (err) {\r\n        alert('Error uploading image:', err);\r\n        throw new Error('Image upload failed');\r\n    }\r\n};\r\n","import axios from 'axios'\r\nimport {\r\n    CREATE_STORY_REQUEST,\r\n    CREATE_STORY_SUCCESS,\r\n    CREATE_STORY_ERROR,\r\n\r\n    CREATE_CHAPTER_REQUEST,\r\n    CREATE_CHAPTER_SUCCESS,\r\n    CREATE_CHAPTER_ERROR,\r\n\r\n    LIST_STORY_REQUEST,\r\n    LIST_STORY_SUCCESS,\r\n    LIST_STORY_ERROR,\r\n\r\n    READ_CHAPTER_REQUEST,\r\n    READ_CHAPTER_SUCCESS,\r\n    READ_CHAPTER_ERROR,\r\n\r\n    READ_STORY_DETAILS_REQUEST,\r\n    READ_STORY_DETAILS_SUCCESS,\r\n    READ_STORY_DETAILS_ERROR,\r\n\r\n    LIST_CHAPTER_REQUEST,\r\n    LIST_CHAPTER_SUCCESS,\r\n    LIST_CHAPTER_ERROR,\r\n\r\n    UPDATE_CHAPTER_REQUEST,\r\n    UPDATE_CHAPTER_SUCCESS,\r\n    UPDATE_CHAPTER_ERROR,\r\n\r\n    LIST_ADMIN_STORY_REQUEST,\r\n    LIST_ADMIN_STORY_SUCCESS,\r\n    LIST_ADMIN_STORY_ERROR,\r\n\r\n    LIST_ADMIN_CHAPTER_REQUEST,\r\n    LIST_ADMIN_CHAPTER_SUCCESS,\r\n    LIST_ADMIN_CHAPTER_ERROR,\r\n    UPDATE_STORY_REQUEST,\r\n    UPDATE_STORY_SUCCESS,\r\n    UPDATE_STORY_ERROR,\r\n\r\n} from '../Constant/StoryConstant'\r\nimport { backend } from '../../Connection/conn'\r\n\r\nconst token = localStorage.getItem('token') ? localStorage.getItem('token') : null;\r\n\r\nconst Authconfig = {\r\n    headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n    },\r\n    withCredentials: true,\r\n}\r\n\r\nconst config = {\r\n    headers: {\r\n        'Content-type': 'application/json',\r\n    }\r\n}\r\n\r\n\r\nexport const createStory = (fdata) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CREATE_STORY_REQUEST })\r\n\r\n        const { data } = await axios.post(`${backend}/api/story/create/`, fdata, Authconfig)\r\n\r\n        dispatch({\r\n            type: CREATE_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: CREATE_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listStory = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_STORY_REQUEST })\r\n        const token = localStorage.getItem('token') ? localStorage.getItem('token') : null;\r\n        const Authconfig = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                ...(token && { Authorization: `Bearer ${token}` }), \r\n            },\r\n            withCredentials: true,\r\n        }\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/list`, Authconfig)\r\n        dispatch({\r\n            type: LIST_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listStoryDetails = (storyid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: READ_STORY_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}`, config)\r\n        \r\n        dispatch({\r\n            type: READ_STORY_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: READ_STORY_DETAILS_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const createChapter = (storyid, fdata) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CREATE_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.post(`${backend}/api/story/${storyid}/chapter/create/`, fdata, Authconfig)\r\n        dispatch({\r\n            type: CREATE_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: CREATE_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listChapter = (storyid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}/chapter/list`, config)\r\n        dispatch({\r\n            type: LIST_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const readChapter = (storyid, chapterid) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: READ_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/story/${storyid}/chapter/${chapterid}`, config)\r\n        dispatch({\r\n            type: READ_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: READ_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listAdminStory = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_ADMIN_STORY_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/admin/story/list`, Authconfig)\r\n        dispatch({\r\n            type: LIST_ADMIN_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_ADMIN_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const listAdminChapter = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LIST_ADMIN_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.get(`${backend}/api/admin/story/${id}/chapter/list`, Authconfig)\r\n        dispatch({\r\n            type: LIST_ADMIN_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: LIST_ADMIN_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateChapter = (storyid, chapterid, fdata) => async (dispatch) => {\r\n    try {\r\n        console.log(fdata)\r\n        dispatch({ type: UPDATE_CHAPTER_REQUEST })\r\n\r\n        const { data } = await axios.put(`${backend}/api/story/${storyid}/chapter/${chapterid}/update`, fdata, Authconfig)\r\n        dispatch({\r\n            type: UPDATE_CHAPTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: UPDATE_CHAPTER_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateStory = (storyid, fdata) => async (dispatch) => {\r\n    try {\r\n        console.log(fdata)\r\n        dispatch({ type: UPDATE_STORY_REQUEST })\r\n\r\n        const { data } = await axios.put(`${backend}/api/story/${storyid}/update`, fdata, Authconfig)\r\n        dispatch({\r\n            type: UPDATE_STORY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: UPDATE_STORY_ERROR,\r\n            payload: err\r\n        })\r\n    }\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { UploadImage } from '../../Helper/StoryHelp';\r\nimport { listStoryDetails,updateStory } from '../../Redux/Action/StoryAction';\r\nimport Loader from '../../Components/Message/Loader';\r\nimport Message from '../../Components/Message/Message';\r\nimport LoaderModel from '../../Components/Message/LoaderModel';\r\nimport { UPDATE_CHAPTER_RESET , READ_CHAPTER_RESET, UPDATE_STORY_RESET } from '../../Redux/Constant/StoryConstant';\r\nimport BackButton from '../../Components/Element/BackButton';\r\n\r\nconst EditStoryScreen = ({ dispatch }) => {\r\n    const { storyid } = useParams();\r\n    const [image, setImage] = useState('');\r\n    const [isFormInitialized, setIsFormInitialized] = useState(false);\r\n\r\n    // Fetch chapter state from Redux\r\n    const readStory = useSelector(state => state.readStory);\r\n    const { loading, error, book } = readStory;\r\n\r\n    console.log('readStory',readStory)\r\n\r\n    const updateStoryState = useSelector(state => state.updateStory);\r\n    const { loading: updateLoading,\r\n        // error: updateError,\r\n        success } = updateStoryState;\r\n\r\n    // Form fields refs\r\n    const titleRef = useRef(null);\r\n    const chapterRef = useRef(null);\r\n    const summaryRef = useRef(null);\r\n    const catRef = useRef(null);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [oldForm, setOldForm] = useState({})\r\n\r\n\r\n    // Step 1: Fetch story if not already loaded or chapterid doesn't match\r\n    useEffect(() => {\r\n        if (!book || book?._id != storyid) {\r\n            dispatch(listStoryDetails(storyid));\r\n        }\r\n\r\n\r\n        const initializeForm = async () => {\r\n            if (book && book?._id == storyid && !isFormInitialized) {\r\n                titleRef.current.value = book.name || '';\r\n                catRef.current.value = book.category || '';\r\n                summaryRef.current.value = book.summary || '';\r\n\r\n                setImage(book.cover || '');\r\n            }\r\n            setIsFormInitialized(true);  // Mark form as initialized\r\n        };\r\n\r\n        if (book && book?._id == storyid && !isFormInitialized) {\r\n            initializeForm();\r\n            setOldForm({\r\n                title: book.title,\r\n                category: catRef.current.value,\r\n                summary: summaryRef.current.value,\r\n                cover: book.cover,\r\n            })\r\n        }\r\n\r\n\r\n         \r\n    }, [dispatch, storyid,isFormInitialized,book]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = {}; // Initialize an empty object\r\n\r\n        // Conditionally add properties based on changes\r\n        if (titleRef.current.value !== oldForm.title) {\r\n            formData.title = titleRef.current.value; // Add title if it has changed\r\n        }\r\n        if (catRef.current.value !== oldForm.category) {\r\n            formData.category = catRef.current.value; // Add category if it has changed\r\n        }\r\n        if (summaryRef.current.value !== oldForm.summary) {\r\n            formData.summary = summaryRef.current.value; // Add summary if it has changed\r\n        }\r\n        if (image !== oldForm.cover) {\r\n            console.log('image',image)\r\n            console.log('old img',oldForm.image)\r\n            formData.cover = image; // Add cover if it has changed\r\n        }\r\n\r\n      \r\n\r\n        dispatch(updateStory(storyid, formData));\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            alert('Chapter Updated ...')\r\n            navigate(`/add/story/${storyid}`);\r\n            dispatch({ type: UPDATE_STORY_RESET })\r\n            dispatch({ type: READ_CHAPTER_RESET })\r\n        }\r\n    }, [success])\r\n\r\n    const uploadImage = async (e) => {\r\n        e.preventDefault();\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            try {\r\n                const uploadedUrl = await UploadImage(file);\r\n                setImage(uploadedUrl);\r\n            } catch (error) {\r\n                console.error(\"Image upload failed\", error);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Step 3: Rendering based on loading/error state\r\n    if (loading) return <Loader />;\r\n    if (error) return <Message>{error}</Message>;\r\n    if (!book?._id) return null;\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"form bg-white p-6 my-10 relative max-w-lg mx-auto shadow-lg rounded-lg\">\r\n            <BackButton url={`/list-story`}/>\r\n            { updateLoading && <LoaderModel />}\r\n            <h3 className=\"text-2xl text-gray-900 font-semibold\">Edit Chapter</h3>\r\n            <div className=\"flex space-x-5 mt-3\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Title\"\r\n                    className=\"border p-2 w-1/2\"\r\n                    ref={titleRef}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"flex space-x-5 mt-3 mb-2\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Category\"\r\n                    className=\"border p-2 w-1/2\"\r\n                    ref={catRef}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"relative max-h-52 aspect-[9/16] bg-gray-200 overflow-hidden left-1/3 align-middle\">\r\n                <img\r\n                    src={image}\r\n                    alt=\"\"\r\n                    className=\"object-cover w-full h-full absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"flex space-x-5 mt-3\">\r\n                <input\r\n                    type=\"file\"\r\n                    onChange={uploadImage}\r\n                    className=\"border p-2 w-1/2\"\r\n                    accept=\"image/*\"\r\n                />\r\n            </div>\r\n\r\n            <h1>Summary</h1>\r\n            <textarea\r\n                placeholder=\"Write Summary here\"\r\n                className=\"border p-2 mt-3 w-full\"\r\n                ref={summaryRef}\r\n                maxLength={2000}\r\n            />\r\n\r\n         \r\n            <input\r\n                type=\"submit\"\r\n                value=\"Update Story\"\r\n                className=\"w-full mt-6 bg-blue-600 hover:bg-blue-500 text-white font-semibold p-3\"\r\n            />\r\n\r\n\r\n\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default EditStoryScreen;\r\n"],"names":["_ref","url","navigate","useNavigate","_jsx","className","children","onClick","handleClick","LoaderModel","_jsxs","Children","UploadImage","async","formData","FormData","append","file","token","localStorage","getItem","config","headers","Authorization","concat","withCredentials","response","axios","post","backend","status","uploadedImageUrl","data","image_url","alert","err","Error","Authconfig","createStory","fdata","dispatch","type","CREATE_STORY_REQUEST","CREATE_STORY_SUCCESS","payload","CREATE_STORY_ERROR","listStory","LIST_STORY_REQUEST","get","LIST_STORY_SUCCESS","LIST_STORY_ERROR","listStoryDetails","storyid","READ_STORY_DETAILS_REQUEST","READ_STORY_DETAILS_SUCCESS","READ_STORY_DETAILS_ERROR","createChapter","CREATE_CHAPTER_REQUEST","CREATE_CHAPTER_SUCCESS","CREATE_CHAPTER_ERROR","listChapter","LIST_CHAPTER_REQUEST","LIST_CHAPTER_SUCCESS","LIST_CHAPTER_ERROR","readChapter","chapterid","READ_CHAPTER_REQUEST","READ_CHAPTER_SUCCESS","READ_CHAPTER_ERROR","listAdminStory","LIST_ADMIN_STORY_REQUEST","LIST_ADMIN_STORY_SUCCESS","LIST_ADMIN_STORY_ERROR","listAdminChapter","id","LIST_ADMIN_CHAPTER_REQUEST","LIST_ADMIN_CHAPTER_SUCCESS","LIST_ADMIN_CHAPTER_ERROR","updateChapter","console","log","UPDATE_CHAPTER_REQUEST","put","UPDATE_CHAPTER_SUCCESS","UPDATE_CHAPTER_ERROR","updateStory","UPDATE_STORY_REQUEST","UPDATE_STORY_SUCCESS","UPDATE_STORY_ERROR","useParams","image","setImage","useState","isFormInitialized","setIsFormInitialized","readStory","useSelector","state","loading","error","book","updateStoryState","updateLoading","success","titleRef","useRef","summaryRef","catRef","oldForm","setOldForm","useEffect","_id","current","value","name","category","summary","cover","initializeForm","title","UPDATE_STORY_RESET","READ_CHAPTER_RESET","Loader","Message","onSubmit","e","preventDefault","BackButton","placeholder","ref","src","alt","onChange","target","files","uploadedUrl","accept","maxLength"],"sourceRoot":""}